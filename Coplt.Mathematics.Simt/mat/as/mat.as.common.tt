<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../../../Coplt.Mathematics/types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;
<#
    var sizes = new[] { 16 };
    foreach (var typ in Typ.Typs)
    {
        if (!typ.simd) continue;
        if (typ.size < 4) continue;
        var ss = typ.size switch {
            2 => new[] { ("half", "f"), ("short", "i"), ("ushort", "u"), ("b16v", "b") },
            4 => new[] { ("float", "f"), ("int", "i"), ("uint", "u"), ("b32v", "b") },
            8 => new[] { ("double", "f"), ("long", "i"), ("ulong", "u"), ("b64v", "b") },
            _ => new (string, string)[] { }
            };
        for (var n = 2; n <= 4; n++)
        {
            for (var m = 2; m <= 4; m++)
            {
                foreach (var size in sizes)
                {
                    var typeName = $"{typ.name.Replace('v', 'm')}{n}x{m}_mt";
#>

#region <#= typeName #>

[Ex]
public static partial class math_mt
{
<#
                    foreach (var (target, name) in ss)
                    {
                        var tarName = $"{target.Replace('v', 'm')}{n}x{m}_mt";
#>
    [MethodImpl(256 | 512)]
    public static <#= tarName #> as<#= name #>([This] <#= typeName #> v) => v.BitCast<<#= typeName #>, <#= tarName #>>();
<#
                    }
#>
}

#endregion // <#= typeName #>
<#
                }
            }
        }
    }
#>
