<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../../../Coplt.Mathematics/types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;
<#
    var sizes = new[] { 16 };
    foreach (var typ in Typ.Typs)
    {
        if (!typ.simd) continue;
        if (typ.size < 4) continue;
        foreach (var size in sizes)
        {
            var typeName = $"{typ.name}2_mt";
            var type = $"{typ.compType}_mt";
#>

#region <#= typeName #>

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y) => (X, y)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static <#= typeName #> Rx(this <#= typeName #> self, <#= type #> x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y) => (x, Y)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static <#= typeName #> Ry(this <#= typeName #> self, <#= type #> y)
    {
        self.y = y;
        return self;
    }
}

#endregion // <#= typeName #>
<#
        }
    }
#>
