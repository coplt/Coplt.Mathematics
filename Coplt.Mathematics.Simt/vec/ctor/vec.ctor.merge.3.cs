// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float3_mt

public partial struct float3_mt 
{
    [MethodImpl(256 | 512)]
    public float3_mt(float2_mt xy, float_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public float3_mt(float_mt x, float2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal float3_mt(float2_mt xz, float_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static float3_mt float3_mt(float2_mt xy, float_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static float3_mt float3_mt(float_mt x, float2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Ix(this float2_mt yz, float_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Iy(this float2_mt xz, float_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Iz(this float2_mt xy, float_mt z) => new(xy, z);
}

#endregion // float3_mt

#region double3_mt

public partial struct double3_mt 
{
    [MethodImpl(256 | 512)]
    public double3_mt(double2_mt xy, double_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public double3_mt(double_mt x, double2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal double3_mt(double2_mt xz, double_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static double3_mt double3_mt(double2_mt xy, double_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static double3_mt double3_mt(double_mt x, double2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Ix(this double2_mt yz, double_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Iy(this double2_mt xz, double_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Iz(this double2_mt xy, double_mt z) => new(xy, z);
}

#endregion // double3_mt

#region int3_mt

public partial struct int3_mt 
{
    [MethodImpl(256 | 512)]
    public int3_mt(int2_mt xy, int_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public int3_mt(int_mt x, int2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal int3_mt(int2_mt xz, int_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static int3_mt int3_mt(int2_mt xy, int_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static int3_mt int3_mt(int_mt x, int2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Ix(this int2_mt yz, int_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Iy(this int2_mt xz, int_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Iz(this int2_mt xy, int_mt z) => new(xy, z);
}

#endregion // int3_mt

#region uint3_mt

public partial struct uint3_mt 
{
    [MethodImpl(256 | 512)]
    public uint3_mt(uint2_mt xy, uint_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public uint3_mt(uint_mt x, uint2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal uint3_mt(uint2_mt xz, uint_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static uint3_mt uint3_mt(uint2_mt xy, uint_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static uint3_mt uint3_mt(uint_mt x, uint2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Ix(this uint2_mt yz, uint_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Iy(this uint2_mt xz, uint_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Iz(this uint2_mt xy, uint_mt z) => new(xy, z);
}

#endregion // uint3_mt

#region long3_mt

public partial struct long3_mt 
{
    [MethodImpl(256 | 512)]
    public long3_mt(long2_mt xy, long_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public long3_mt(long_mt x, long2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal long3_mt(long2_mt xz, long_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static long3_mt long3_mt(long2_mt xy, long_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static long3_mt long3_mt(long_mt x, long2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Ix(this long2_mt yz, long_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Iy(this long2_mt xz, long_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Iz(this long2_mt xy, long_mt z) => new(xy, z);
}

#endregion // long3_mt

#region ulong3_mt

public partial struct ulong3_mt 
{
    [MethodImpl(256 | 512)]
    public ulong3_mt(ulong2_mt xy, ulong_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public ulong3_mt(ulong_mt x, ulong2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal ulong3_mt(ulong2_mt xz, ulong_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static ulong3_mt ulong3_mt(ulong2_mt xy, ulong_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static ulong3_mt ulong3_mt(ulong_mt x, ulong2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Ix(this ulong2_mt yz, ulong_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Iy(this ulong2_mt xz, ulong_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Iz(this ulong2_mt xy, ulong_mt z) => new(xy, z);
}

#endregion // ulong3_mt

#region b32v3_mt

public partial struct b32v3_mt 
{
    [MethodImpl(256 | 512)]
    public b32v3_mt(b32v2_mt xy, b32_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public b32v3_mt(b32_mt x, b32v2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal b32v3_mt(b32v2_mt xz, b32_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static b32v3_mt b32v3_mt(b32v2_mt xy, b32_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static b32v3_mt b32v3_mt(b32_mt x, b32v2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Ix(this b32v2_mt yz, b32_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Iy(this b32v2_mt xz, b32_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Iz(this b32v2_mt xy, b32_mt z) => new(xy, z);
}

#endregion // b32v3_mt

#region b64v3_mt

public partial struct b64v3_mt 
{
    [MethodImpl(256 | 512)]
    public b64v3_mt(b64v2_mt xy, b64_mt z)
    {
        this.x = xy.x;
        this.y = xy.y;
        this.z = z;
    }

    [MethodImpl(256 | 512)]
    public b64v3_mt(b64_mt x, b64v2_mt yz)
    {
        this.x = x;
        this.y = yz.x;
        this.z = yz.y;
    }

    [MethodImpl(256 | 512)]
    internal b64v3_mt(b64v2_mt xz, b64_mt y, insert_y _)
    {
        this.x = xz.x;
        this.y = y;
        this.z = xz.y;
    }
}

public static partial class ctor_mt
{
    [MethodImpl(256 | 512)]
    public static b64v3_mt b64v3_mt(b64v2_mt xy, b64_mt z) => new(xy, z);

    [MethodImpl(256 | 512)]
    public static b64v3_mt b64v3_mt(b64_mt x, b64v2_mt yz) => new(x, yz);
}

public static partial class math_mt_ex
{
    /// <summary>
    /// Insert X component
    /// <code>X -> (y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Ix(this b64v2_mt yz, b64_mt x) => new(x, yz);

    /// <summary>
    /// Insert Y component
    /// <code>Y -> (x, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Iy(this b64v2_mt xz, b64_mt y) => new(xz, y, new insert_y());

    /// <summary>
    /// Insert Z component
    /// <code>Z -> (x, y) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Iz(this b64v2_mt xy, b64_mt z) => new(xy, z);
}

#endregion // b64v3_mt
