// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Rx(this float3_mt self, float_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Ry(this float3_mt self, float_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Rz(this float3_mt self, float_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Rxy(this float3_mt self, float2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Ryz(this float3_mt self, float2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static float3_mt Rxz(this float3_mt self, float2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // float3_mt

#region double3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Rx(this double3_mt self, double_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Ry(this double3_mt self, double_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Rz(this double3_mt self, double_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Rxy(this double3_mt self, double2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Ryz(this double3_mt self, double2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static double3_mt Rxz(this double3_mt self, double2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // double3_mt

#region int3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Rx(this int3_mt self, int_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Ry(this int3_mt self, int_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Rz(this int3_mt self, int_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Rxy(this int3_mt self, int2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Ryz(this int3_mt self, int2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static int3_mt Rxz(this int3_mt self, int2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // int3_mt

#region uint3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Rx(this uint3_mt self, uint_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Ry(this uint3_mt self, uint_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Rz(this uint3_mt self, uint_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Rxy(this uint3_mt self, uint2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Ryz(this uint3_mt self, uint2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static uint3_mt Rxz(this uint3_mt self, uint2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // uint3_mt

#region long3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Rx(this long3_mt self, long_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Ry(this long3_mt self, long_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Rz(this long3_mt self, long_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Rxy(this long3_mt self, long2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Ryz(this long3_mt self, long2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static long3_mt Rxz(this long3_mt self, long2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // long3_mt

#region ulong3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Rx(this ulong3_mt self, ulong_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Ry(this ulong3_mt self, ulong_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Rz(this ulong3_mt self, ulong_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Rxy(this ulong3_mt self, ulong2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Ryz(this ulong3_mt self, ulong2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static ulong3_mt Rxz(this ulong3_mt self, ulong2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // ulong3_mt

#region b32v3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Rx(this b32v3_mt self, b32_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Ry(this b32v3_mt self, b32_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Rz(this b32v3_mt self, b32_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Rxy(this b32v3_mt self, b32v2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Ryz(this b32v3_mt self, b32v2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b32v3_mt Rxz(this b32v3_mt self, b32v2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // b32v3_mt

#region b64v3_mt

public static partial class math_mt_ex
{
    /// <summary>
    /// Replace X component
    /// <code>X -> (x, y, z) => (X, y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Rx(this b64v3_mt self, b64_mt x)
    {
        self.x = x;
        return self;
    }

    /// <summary>
    /// Replace Y component
    /// <code>Y -> (x, y, z) => (x, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Ry(this b64v3_mt self, b64_mt y)
    {
        self.y = y;
        return self;
    }

    /// <summary>
    /// Replace Z component
    /// <code>Z -> (x, y, z) => (x, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Rz(this b64v3_mt self, b64_mt z)
    {
        self.z = z;
        return self;
    }

    /// <summary>
    /// Replace X Y component
    /// <code>(X, Y) -> (x, y, z) => (X, Y, z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Rxy(this b64v3_mt self, b64v2_mt xy)
    {
        self.xy = xy;
        return self;
    }

    /// <summary>
    /// Replace Y Z component
    /// <code>(Y, Z) -> (x, y, z) => (x, Y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Ryz(this b64v3_mt self, b64v2_mt yz)
    {
        self.yz = yz;
        return self;
    }

    /// <summary>
    /// Replace X Z component
    /// <code>(X, Z) -> (x, y, z) => (X, y, Z)</code>
    /// </summary>
    [MethodImpl(256 | 512)]
    public static b64v3_mt Rxz(this b64v3_mt self, b64v2_mt xz)
    {
        self.xz = xz;
        return self;
    }
}

#endregion // b64v3_mt
