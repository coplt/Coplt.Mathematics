// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt4 asfloat([This] float2_mt4 v) => v.BitCast<float2_mt4, float2_mt4>();
    [MethodImpl(256 | 512)]
    public static int2_mt4 asint([This] float2_mt4 v) => v.BitCast<float2_mt4, int2_mt4>();
    [MethodImpl(256 | 512)]
    public static uint2_mt4 asuint([This] float2_mt4 v) => v.BitCast<float2_mt4, uint2_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt4 asb32([This] float2_mt4 v) => v.BitCast<float2_mt4, b32v2_mt4>();
}

#endregion // float2_mt4

#region float2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt8 asfloat([This] float2_mt8 v) => v.BitCast<float2_mt8, float2_mt8>();
    [MethodImpl(256 | 512)]
    public static int2_mt8 asint([This] float2_mt8 v) => v.BitCast<float2_mt8, int2_mt8>();
    [MethodImpl(256 | 512)]
    public static uint2_mt8 asuint([This] float2_mt8 v) => v.BitCast<float2_mt8, uint2_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt8 asb32([This] float2_mt8 v) => v.BitCast<float2_mt8, b32v2_mt8>();
}

#endregion // float2_mt8

#region float2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt16 asfloat([This] float2_mt16 v) => v.BitCast<float2_mt16, float2_mt16>();
    [MethodImpl(256 | 512)]
    public static int2_mt16 asint([This] float2_mt16 v) => v.BitCast<float2_mt16, int2_mt16>();
    [MethodImpl(256 | 512)]
    public static uint2_mt16 asuint([This] float2_mt16 v) => v.BitCast<float2_mt16, uint2_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt16 asb32([This] float2_mt16 v) => v.BitCast<float2_mt16, b32v2_mt16>();
}

#endregion // float2_mt16

#region float3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt4 asfloat([This] float3_mt4 v) => v.BitCast<float3_mt4, float3_mt4>();
    [MethodImpl(256 | 512)]
    public static int3_mt4 asint([This] float3_mt4 v) => v.BitCast<float3_mt4, int3_mt4>();
    [MethodImpl(256 | 512)]
    public static uint3_mt4 asuint([This] float3_mt4 v) => v.BitCast<float3_mt4, uint3_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt4 asb32([This] float3_mt4 v) => v.BitCast<float3_mt4, b32v3_mt4>();
}

#endregion // float3_mt4

#region float3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt8 asfloat([This] float3_mt8 v) => v.BitCast<float3_mt8, float3_mt8>();
    [MethodImpl(256 | 512)]
    public static int3_mt8 asint([This] float3_mt8 v) => v.BitCast<float3_mt8, int3_mt8>();
    [MethodImpl(256 | 512)]
    public static uint3_mt8 asuint([This] float3_mt8 v) => v.BitCast<float3_mt8, uint3_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt8 asb32([This] float3_mt8 v) => v.BitCast<float3_mt8, b32v3_mt8>();
}

#endregion // float3_mt8

#region float3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt16 asfloat([This] float3_mt16 v) => v.BitCast<float3_mt16, float3_mt16>();
    [MethodImpl(256 | 512)]
    public static int3_mt16 asint([This] float3_mt16 v) => v.BitCast<float3_mt16, int3_mt16>();
    [MethodImpl(256 | 512)]
    public static uint3_mt16 asuint([This] float3_mt16 v) => v.BitCast<float3_mt16, uint3_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt16 asb32([This] float3_mt16 v) => v.BitCast<float3_mt16, b32v3_mt16>();
}

#endregion // float3_mt16

#region float4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt4 asfloat([This] float4_mt4 v) => v.BitCast<float4_mt4, float4_mt4>();
    [MethodImpl(256 | 512)]
    public static int4_mt4 asint([This] float4_mt4 v) => v.BitCast<float4_mt4, int4_mt4>();
    [MethodImpl(256 | 512)]
    public static uint4_mt4 asuint([This] float4_mt4 v) => v.BitCast<float4_mt4, uint4_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt4 asb32([This] float4_mt4 v) => v.BitCast<float4_mt4, b32v4_mt4>();
}

#endregion // float4_mt4

#region float4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt8 asfloat([This] float4_mt8 v) => v.BitCast<float4_mt8, float4_mt8>();
    [MethodImpl(256 | 512)]
    public static int4_mt8 asint([This] float4_mt8 v) => v.BitCast<float4_mt8, int4_mt8>();
    [MethodImpl(256 | 512)]
    public static uint4_mt8 asuint([This] float4_mt8 v) => v.BitCast<float4_mt8, uint4_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt8 asb32([This] float4_mt8 v) => v.BitCast<float4_mt8, b32v4_mt8>();
}

#endregion // float4_mt8

#region float4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt16 asfloat([This] float4_mt16 v) => v.BitCast<float4_mt16, float4_mt16>();
    [MethodImpl(256 | 512)]
    public static int4_mt16 asint([This] float4_mt16 v) => v.BitCast<float4_mt16, int4_mt16>();
    [MethodImpl(256 | 512)]
    public static uint4_mt16 asuint([This] float4_mt16 v) => v.BitCast<float4_mt16, uint4_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt16 asb32([This] float4_mt16 v) => v.BitCast<float4_mt16, b32v4_mt16>();
}

#endregion // float4_mt16

#region double2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt4 asdouble([This] double2_mt4 v) => v.BitCast<double2_mt4, double2_mt4>();
    [MethodImpl(256 | 512)]
    public static long2_mt4 aslong([This] double2_mt4 v) => v.BitCast<double2_mt4, long2_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt4 asulong([This] double2_mt4 v) => v.BitCast<double2_mt4, ulong2_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt4 asb64([This] double2_mt4 v) => v.BitCast<double2_mt4, b64v2_mt4>();
}

#endregion // double2_mt4

#region double2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt8 asdouble([This] double2_mt8 v) => v.BitCast<double2_mt8, double2_mt8>();
    [MethodImpl(256 | 512)]
    public static long2_mt8 aslong([This] double2_mt8 v) => v.BitCast<double2_mt8, long2_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt8 asulong([This] double2_mt8 v) => v.BitCast<double2_mt8, ulong2_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt8 asb64([This] double2_mt8 v) => v.BitCast<double2_mt8, b64v2_mt8>();
}

#endregion // double2_mt8

#region double2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt16 asdouble([This] double2_mt16 v) => v.BitCast<double2_mt16, double2_mt16>();
    [MethodImpl(256 | 512)]
    public static long2_mt16 aslong([This] double2_mt16 v) => v.BitCast<double2_mt16, long2_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt16 asulong([This] double2_mt16 v) => v.BitCast<double2_mt16, ulong2_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt16 asb64([This] double2_mt16 v) => v.BitCast<double2_mt16, b64v2_mt16>();
}

#endregion // double2_mt16

#region double3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt4 asdouble([This] double3_mt4 v) => v.BitCast<double3_mt4, double3_mt4>();
    [MethodImpl(256 | 512)]
    public static long3_mt4 aslong([This] double3_mt4 v) => v.BitCast<double3_mt4, long3_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt4 asulong([This] double3_mt4 v) => v.BitCast<double3_mt4, ulong3_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt4 asb64([This] double3_mt4 v) => v.BitCast<double3_mt4, b64v3_mt4>();
}

#endregion // double3_mt4

#region double3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt8 asdouble([This] double3_mt8 v) => v.BitCast<double3_mt8, double3_mt8>();
    [MethodImpl(256 | 512)]
    public static long3_mt8 aslong([This] double3_mt8 v) => v.BitCast<double3_mt8, long3_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt8 asulong([This] double3_mt8 v) => v.BitCast<double3_mt8, ulong3_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt8 asb64([This] double3_mt8 v) => v.BitCast<double3_mt8, b64v3_mt8>();
}

#endregion // double3_mt8

#region double3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt16 asdouble([This] double3_mt16 v) => v.BitCast<double3_mt16, double3_mt16>();
    [MethodImpl(256 | 512)]
    public static long3_mt16 aslong([This] double3_mt16 v) => v.BitCast<double3_mt16, long3_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt16 asulong([This] double3_mt16 v) => v.BitCast<double3_mt16, ulong3_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt16 asb64([This] double3_mt16 v) => v.BitCast<double3_mt16, b64v3_mt16>();
}

#endregion // double3_mt16

#region double4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt4 asdouble([This] double4_mt4 v) => v.BitCast<double4_mt4, double4_mt4>();
    [MethodImpl(256 | 512)]
    public static long4_mt4 aslong([This] double4_mt4 v) => v.BitCast<double4_mt4, long4_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt4 asulong([This] double4_mt4 v) => v.BitCast<double4_mt4, ulong4_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt4 asb64([This] double4_mt4 v) => v.BitCast<double4_mt4, b64v4_mt4>();
}

#endregion // double4_mt4

#region double4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt8 asdouble([This] double4_mt8 v) => v.BitCast<double4_mt8, double4_mt8>();
    [MethodImpl(256 | 512)]
    public static long4_mt8 aslong([This] double4_mt8 v) => v.BitCast<double4_mt8, long4_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt8 asulong([This] double4_mt8 v) => v.BitCast<double4_mt8, ulong4_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt8 asb64([This] double4_mt8 v) => v.BitCast<double4_mt8, b64v4_mt8>();
}

#endregion // double4_mt8

#region double4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt16 asdouble([This] double4_mt16 v) => v.BitCast<double4_mt16, double4_mt16>();
    [MethodImpl(256 | 512)]
    public static long4_mt16 aslong([This] double4_mt16 v) => v.BitCast<double4_mt16, long4_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt16 asulong([This] double4_mt16 v) => v.BitCast<double4_mt16, ulong4_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt16 asb64([This] double4_mt16 v) => v.BitCast<double4_mt16, b64v4_mt16>();
}

#endregion // double4_mt16

#region int2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt4 asfloat([This] int2_mt4 v) => v.BitCast<int2_mt4, float2_mt4>();
    [MethodImpl(256 | 512)]
    public static int2_mt4 asint([This] int2_mt4 v) => v.BitCast<int2_mt4, int2_mt4>();
    [MethodImpl(256 | 512)]
    public static uint2_mt4 asuint([This] int2_mt4 v) => v.BitCast<int2_mt4, uint2_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt4 asb32([This] int2_mt4 v) => v.BitCast<int2_mt4, b32v2_mt4>();
}

#endregion // int2_mt4

#region int2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt8 asfloat([This] int2_mt8 v) => v.BitCast<int2_mt8, float2_mt8>();
    [MethodImpl(256 | 512)]
    public static int2_mt8 asint([This] int2_mt8 v) => v.BitCast<int2_mt8, int2_mt8>();
    [MethodImpl(256 | 512)]
    public static uint2_mt8 asuint([This] int2_mt8 v) => v.BitCast<int2_mt8, uint2_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt8 asb32([This] int2_mt8 v) => v.BitCast<int2_mt8, b32v2_mt8>();
}

#endregion // int2_mt8

#region int2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt16 asfloat([This] int2_mt16 v) => v.BitCast<int2_mt16, float2_mt16>();
    [MethodImpl(256 | 512)]
    public static int2_mt16 asint([This] int2_mt16 v) => v.BitCast<int2_mt16, int2_mt16>();
    [MethodImpl(256 | 512)]
    public static uint2_mt16 asuint([This] int2_mt16 v) => v.BitCast<int2_mt16, uint2_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt16 asb32([This] int2_mt16 v) => v.BitCast<int2_mt16, b32v2_mt16>();
}

#endregion // int2_mt16

#region int3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt4 asfloat([This] int3_mt4 v) => v.BitCast<int3_mt4, float3_mt4>();
    [MethodImpl(256 | 512)]
    public static int3_mt4 asint([This] int3_mt4 v) => v.BitCast<int3_mt4, int3_mt4>();
    [MethodImpl(256 | 512)]
    public static uint3_mt4 asuint([This] int3_mt4 v) => v.BitCast<int3_mt4, uint3_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt4 asb32([This] int3_mt4 v) => v.BitCast<int3_mt4, b32v3_mt4>();
}

#endregion // int3_mt4

#region int3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt8 asfloat([This] int3_mt8 v) => v.BitCast<int3_mt8, float3_mt8>();
    [MethodImpl(256 | 512)]
    public static int3_mt8 asint([This] int3_mt8 v) => v.BitCast<int3_mt8, int3_mt8>();
    [MethodImpl(256 | 512)]
    public static uint3_mt8 asuint([This] int3_mt8 v) => v.BitCast<int3_mt8, uint3_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt8 asb32([This] int3_mt8 v) => v.BitCast<int3_mt8, b32v3_mt8>();
}

#endregion // int3_mt8

#region int3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt16 asfloat([This] int3_mt16 v) => v.BitCast<int3_mt16, float3_mt16>();
    [MethodImpl(256 | 512)]
    public static int3_mt16 asint([This] int3_mt16 v) => v.BitCast<int3_mt16, int3_mt16>();
    [MethodImpl(256 | 512)]
    public static uint3_mt16 asuint([This] int3_mt16 v) => v.BitCast<int3_mt16, uint3_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt16 asb32([This] int3_mt16 v) => v.BitCast<int3_mt16, b32v3_mt16>();
}

#endregion // int3_mt16

#region int4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt4 asfloat([This] int4_mt4 v) => v.BitCast<int4_mt4, float4_mt4>();
    [MethodImpl(256 | 512)]
    public static int4_mt4 asint([This] int4_mt4 v) => v.BitCast<int4_mt4, int4_mt4>();
    [MethodImpl(256 | 512)]
    public static uint4_mt4 asuint([This] int4_mt4 v) => v.BitCast<int4_mt4, uint4_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt4 asb32([This] int4_mt4 v) => v.BitCast<int4_mt4, b32v4_mt4>();
}

#endregion // int4_mt4

#region int4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt8 asfloat([This] int4_mt8 v) => v.BitCast<int4_mt8, float4_mt8>();
    [MethodImpl(256 | 512)]
    public static int4_mt8 asint([This] int4_mt8 v) => v.BitCast<int4_mt8, int4_mt8>();
    [MethodImpl(256 | 512)]
    public static uint4_mt8 asuint([This] int4_mt8 v) => v.BitCast<int4_mt8, uint4_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt8 asb32([This] int4_mt8 v) => v.BitCast<int4_mt8, b32v4_mt8>();
}

#endregion // int4_mt8

#region int4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt16 asfloat([This] int4_mt16 v) => v.BitCast<int4_mt16, float4_mt16>();
    [MethodImpl(256 | 512)]
    public static int4_mt16 asint([This] int4_mt16 v) => v.BitCast<int4_mt16, int4_mt16>();
    [MethodImpl(256 | 512)]
    public static uint4_mt16 asuint([This] int4_mt16 v) => v.BitCast<int4_mt16, uint4_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt16 asb32([This] int4_mt16 v) => v.BitCast<int4_mt16, b32v4_mt16>();
}

#endregion // int4_mt16

#region uint2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt4 asfloat([This] uint2_mt4 v) => v.BitCast<uint2_mt4, float2_mt4>();
    [MethodImpl(256 | 512)]
    public static int2_mt4 asint([This] uint2_mt4 v) => v.BitCast<uint2_mt4, int2_mt4>();
    [MethodImpl(256 | 512)]
    public static uint2_mt4 asuint([This] uint2_mt4 v) => v.BitCast<uint2_mt4, uint2_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt4 asb32([This] uint2_mt4 v) => v.BitCast<uint2_mt4, b32v2_mt4>();
}

#endregion // uint2_mt4

#region uint2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt8 asfloat([This] uint2_mt8 v) => v.BitCast<uint2_mt8, float2_mt8>();
    [MethodImpl(256 | 512)]
    public static int2_mt8 asint([This] uint2_mt8 v) => v.BitCast<uint2_mt8, int2_mt8>();
    [MethodImpl(256 | 512)]
    public static uint2_mt8 asuint([This] uint2_mt8 v) => v.BitCast<uint2_mt8, uint2_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt8 asb32([This] uint2_mt8 v) => v.BitCast<uint2_mt8, b32v2_mt8>();
}

#endregion // uint2_mt8

#region uint2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt16 asfloat([This] uint2_mt16 v) => v.BitCast<uint2_mt16, float2_mt16>();
    [MethodImpl(256 | 512)]
    public static int2_mt16 asint([This] uint2_mt16 v) => v.BitCast<uint2_mt16, int2_mt16>();
    [MethodImpl(256 | 512)]
    public static uint2_mt16 asuint([This] uint2_mt16 v) => v.BitCast<uint2_mt16, uint2_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt16 asb32([This] uint2_mt16 v) => v.BitCast<uint2_mt16, b32v2_mt16>();
}

#endregion // uint2_mt16

#region uint3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt4 asfloat([This] uint3_mt4 v) => v.BitCast<uint3_mt4, float3_mt4>();
    [MethodImpl(256 | 512)]
    public static int3_mt4 asint([This] uint3_mt4 v) => v.BitCast<uint3_mt4, int3_mt4>();
    [MethodImpl(256 | 512)]
    public static uint3_mt4 asuint([This] uint3_mt4 v) => v.BitCast<uint3_mt4, uint3_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt4 asb32([This] uint3_mt4 v) => v.BitCast<uint3_mt4, b32v3_mt4>();
}

#endregion // uint3_mt4

#region uint3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt8 asfloat([This] uint3_mt8 v) => v.BitCast<uint3_mt8, float3_mt8>();
    [MethodImpl(256 | 512)]
    public static int3_mt8 asint([This] uint3_mt8 v) => v.BitCast<uint3_mt8, int3_mt8>();
    [MethodImpl(256 | 512)]
    public static uint3_mt8 asuint([This] uint3_mt8 v) => v.BitCast<uint3_mt8, uint3_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt8 asb32([This] uint3_mt8 v) => v.BitCast<uint3_mt8, b32v3_mt8>();
}

#endregion // uint3_mt8

#region uint3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt16 asfloat([This] uint3_mt16 v) => v.BitCast<uint3_mt16, float3_mt16>();
    [MethodImpl(256 | 512)]
    public static int3_mt16 asint([This] uint3_mt16 v) => v.BitCast<uint3_mt16, int3_mt16>();
    [MethodImpl(256 | 512)]
    public static uint3_mt16 asuint([This] uint3_mt16 v) => v.BitCast<uint3_mt16, uint3_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt16 asb32([This] uint3_mt16 v) => v.BitCast<uint3_mt16, b32v3_mt16>();
}

#endregion // uint3_mt16

#region uint4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt4 asfloat([This] uint4_mt4 v) => v.BitCast<uint4_mt4, float4_mt4>();
    [MethodImpl(256 | 512)]
    public static int4_mt4 asint([This] uint4_mt4 v) => v.BitCast<uint4_mt4, int4_mt4>();
    [MethodImpl(256 | 512)]
    public static uint4_mt4 asuint([This] uint4_mt4 v) => v.BitCast<uint4_mt4, uint4_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt4 asb32([This] uint4_mt4 v) => v.BitCast<uint4_mt4, b32v4_mt4>();
}

#endregion // uint4_mt4

#region uint4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt8 asfloat([This] uint4_mt8 v) => v.BitCast<uint4_mt8, float4_mt8>();
    [MethodImpl(256 | 512)]
    public static int4_mt8 asint([This] uint4_mt8 v) => v.BitCast<uint4_mt8, int4_mt8>();
    [MethodImpl(256 | 512)]
    public static uint4_mt8 asuint([This] uint4_mt8 v) => v.BitCast<uint4_mt8, uint4_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt8 asb32([This] uint4_mt8 v) => v.BitCast<uint4_mt8, b32v4_mt8>();
}

#endregion // uint4_mt8

#region uint4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt16 asfloat([This] uint4_mt16 v) => v.BitCast<uint4_mt16, float4_mt16>();
    [MethodImpl(256 | 512)]
    public static int4_mt16 asint([This] uint4_mt16 v) => v.BitCast<uint4_mt16, int4_mt16>();
    [MethodImpl(256 | 512)]
    public static uint4_mt16 asuint([This] uint4_mt16 v) => v.BitCast<uint4_mt16, uint4_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt16 asb32([This] uint4_mt16 v) => v.BitCast<uint4_mt16, b32v4_mt16>();
}

#endregion // uint4_mt16

#region long2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt4 asdouble([This] long2_mt4 v) => v.BitCast<long2_mt4, double2_mt4>();
    [MethodImpl(256 | 512)]
    public static long2_mt4 aslong([This] long2_mt4 v) => v.BitCast<long2_mt4, long2_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt4 asulong([This] long2_mt4 v) => v.BitCast<long2_mt4, ulong2_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt4 asb64([This] long2_mt4 v) => v.BitCast<long2_mt4, b64v2_mt4>();
}

#endregion // long2_mt4

#region long2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt8 asdouble([This] long2_mt8 v) => v.BitCast<long2_mt8, double2_mt8>();
    [MethodImpl(256 | 512)]
    public static long2_mt8 aslong([This] long2_mt8 v) => v.BitCast<long2_mt8, long2_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt8 asulong([This] long2_mt8 v) => v.BitCast<long2_mt8, ulong2_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt8 asb64([This] long2_mt8 v) => v.BitCast<long2_mt8, b64v2_mt8>();
}

#endregion // long2_mt8

#region long2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt16 asdouble([This] long2_mt16 v) => v.BitCast<long2_mt16, double2_mt16>();
    [MethodImpl(256 | 512)]
    public static long2_mt16 aslong([This] long2_mt16 v) => v.BitCast<long2_mt16, long2_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt16 asulong([This] long2_mt16 v) => v.BitCast<long2_mt16, ulong2_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt16 asb64([This] long2_mt16 v) => v.BitCast<long2_mt16, b64v2_mt16>();
}

#endregion // long2_mt16

#region long3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt4 asdouble([This] long3_mt4 v) => v.BitCast<long3_mt4, double3_mt4>();
    [MethodImpl(256 | 512)]
    public static long3_mt4 aslong([This] long3_mt4 v) => v.BitCast<long3_mt4, long3_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt4 asulong([This] long3_mt4 v) => v.BitCast<long3_mt4, ulong3_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt4 asb64([This] long3_mt4 v) => v.BitCast<long3_mt4, b64v3_mt4>();
}

#endregion // long3_mt4

#region long3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt8 asdouble([This] long3_mt8 v) => v.BitCast<long3_mt8, double3_mt8>();
    [MethodImpl(256 | 512)]
    public static long3_mt8 aslong([This] long3_mt8 v) => v.BitCast<long3_mt8, long3_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt8 asulong([This] long3_mt8 v) => v.BitCast<long3_mt8, ulong3_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt8 asb64([This] long3_mt8 v) => v.BitCast<long3_mt8, b64v3_mt8>();
}

#endregion // long3_mt8

#region long3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt16 asdouble([This] long3_mt16 v) => v.BitCast<long3_mt16, double3_mt16>();
    [MethodImpl(256 | 512)]
    public static long3_mt16 aslong([This] long3_mt16 v) => v.BitCast<long3_mt16, long3_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt16 asulong([This] long3_mt16 v) => v.BitCast<long3_mt16, ulong3_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt16 asb64([This] long3_mt16 v) => v.BitCast<long3_mt16, b64v3_mt16>();
}

#endregion // long3_mt16

#region long4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt4 asdouble([This] long4_mt4 v) => v.BitCast<long4_mt4, double4_mt4>();
    [MethodImpl(256 | 512)]
    public static long4_mt4 aslong([This] long4_mt4 v) => v.BitCast<long4_mt4, long4_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt4 asulong([This] long4_mt4 v) => v.BitCast<long4_mt4, ulong4_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt4 asb64([This] long4_mt4 v) => v.BitCast<long4_mt4, b64v4_mt4>();
}

#endregion // long4_mt4

#region long4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt8 asdouble([This] long4_mt8 v) => v.BitCast<long4_mt8, double4_mt8>();
    [MethodImpl(256 | 512)]
    public static long4_mt8 aslong([This] long4_mt8 v) => v.BitCast<long4_mt8, long4_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt8 asulong([This] long4_mt8 v) => v.BitCast<long4_mt8, ulong4_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt8 asb64([This] long4_mt8 v) => v.BitCast<long4_mt8, b64v4_mt8>();
}

#endregion // long4_mt8

#region long4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt16 asdouble([This] long4_mt16 v) => v.BitCast<long4_mt16, double4_mt16>();
    [MethodImpl(256 | 512)]
    public static long4_mt16 aslong([This] long4_mt16 v) => v.BitCast<long4_mt16, long4_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt16 asulong([This] long4_mt16 v) => v.BitCast<long4_mt16, ulong4_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt16 asb64([This] long4_mt16 v) => v.BitCast<long4_mt16, b64v4_mt16>();
}

#endregion // long4_mt16

#region ulong2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt4 asdouble([This] ulong2_mt4 v) => v.BitCast<ulong2_mt4, double2_mt4>();
    [MethodImpl(256 | 512)]
    public static long2_mt4 aslong([This] ulong2_mt4 v) => v.BitCast<ulong2_mt4, long2_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt4 asulong([This] ulong2_mt4 v) => v.BitCast<ulong2_mt4, ulong2_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt4 asb64([This] ulong2_mt4 v) => v.BitCast<ulong2_mt4, b64v2_mt4>();
}

#endregion // ulong2_mt4

#region ulong2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt8 asdouble([This] ulong2_mt8 v) => v.BitCast<ulong2_mt8, double2_mt8>();
    [MethodImpl(256 | 512)]
    public static long2_mt8 aslong([This] ulong2_mt8 v) => v.BitCast<ulong2_mt8, long2_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt8 asulong([This] ulong2_mt8 v) => v.BitCast<ulong2_mt8, ulong2_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt8 asb64([This] ulong2_mt8 v) => v.BitCast<ulong2_mt8, b64v2_mt8>();
}

#endregion // ulong2_mt8

#region ulong2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt16 asdouble([This] ulong2_mt16 v) => v.BitCast<ulong2_mt16, double2_mt16>();
    [MethodImpl(256 | 512)]
    public static long2_mt16 aslong([This] ulong2_mt16 v) => v.BitCast<ulong2_mt16, long2_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt16 asulong([This] ulong2_mt16 v) => v.BitCast<ulong2_mt16, ulong2_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt16 asb64([This] ulong2_mt16 v) => v.BitCast<ulong2_mt16, b64v2_mt16>();
}

#endregion // ulong2_mt16

#region ulong3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt4 asdouble([This] ulong3_mt4 v) => v.BitCast<ulong3_mt4, double3_mt4>();
    [MethodImpl(256 | 512)]
    public static long3_mt4 aslong([This] ulong3_mt4 v) => v.BitCast<ulong3_mt4, long3_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt4 asulong([This] ulong3_mt4 v) => v.BitCast<ulong3_mt4, ulong3_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt4 asb64([This] ulong3_mt4 v) => v.BitCast<ulong3_mt4, b64v3_mt4>();
}

#endregion // ulong3_mt4

#region ulong3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt8 asdouble([This] ulong3_mt8 v) => v.BitCast<ulong3_mt8, double3_mt8>();
    [MethodImpl(256 | 512)]
    public static long3_mt8 aslong([This] ulong3_mt8 v) => v.BitCast<ulong3_mt8, long3_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt8 asulong([This] ulong3_mt8 v) => v.BitCast<ulong3_mt8, ulong3_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt8 asb64([This] ulong3_mt8 v) => v.BitCast<ulong3_mt8, b64v3_mt8>();
}

#endregion // ulong3_mt8

#region ulong3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt16 asdouble([This] ulong3_mt16 v) => v.BitCast<ulong3_mt16, double3_mt16>();
    [MethodImpl(256 | 512)]
    public static long3_mt16 aslong([This] ulong3_mt16 v) => v.BitCast<ulong3_mt16, long3_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt16 asulong([This] ulong3_mt16 v) => v.BitCast<ulong3_mt16, ulong3_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt16 asb64([This] ulong3_mt16 v) => v.BitCast<ulong3_mt16, b64v3_mt16>();
}

#endregion // ulong3_mt16

#region ulong4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt4 asdouble([This] ulong4_mt4 v) => v.BitCast<ulong4_mt4, double4_mt4>();
    [MethodImpl(256 | 512)]
    public static long4_mt4 aslong([This] ulong4_mt4 v) => v.BitCast<ulong4_mt4, long4_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt4 asulong([This] ulong4_mt4 v) => v.BitCast<ulong4_mt4, ulong4_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt4 asb64([This] ulong4_mt4 v) => v.BitCast<ulong4_mt4, b64v4_mt4>();
}

#endregion // ulong4_mt4

#region ulong4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt8 asdouble([This] ulong4_mt8 v) => v.BitCast<ulong4_mt8, double4_mt8>();
    [MethodImpl(256 | 512)]
    public static long4_mt8 aslong([This] ulong4_mt8 v) => v.BitCast<ulong4_mt8, long4_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt8 asulong([This] ulong4_mt8 v) => v.BitCast<ulong4_mt8, ulong4_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt8 asb64([This] ulong4_mt8 v) => v.BitCast<ulong4_mt8, b64v4_mt8>();
}

#endregion // ulong4_mt8

#region ulong4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt16 asdouble([This] ulong4_mt16 v) => v.BitCast<ulong4_mt16, double4_mt16>();
    [MethodImpl(256 | 512)]
    public static long4_mt16 aslong([This] ulong4_mt16 v) => v.BitCast<ulong4_mt16, long4_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt16 asulong([This] ulong4_mt16 v) => v.BitCast<ulong4_mt16, ulong4_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt16 asb64([This] ulong4_mt16 v) => v.BitCast<ulong4_mt16, b64v4_mt16>();
}

#endregion // ulong4_mt16

#region b32v2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt4 asfloat([This] b32v2_mt4 v) => v.BitCast<b32v2_mt4, float2_mt4>();
    [MethodImpl(256 | 512)]
    public static int2_mt4 asint([This] b32v2_mt4 v) => v.BitCast<b32v2_mt4, int2_mt4>();
    [MethodImpl(256 | 512)]
    public static uint2_mt4 asuint([This] b32v2_mt4 v) => v.BitCast<b32v2_mt4, uint2_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt4 asb32([This] b32v2_mt4 v) => v.BitCast<b32v2_mt4, b32v2_mt4>();
}

#endregion // b32v2_mt4

#region b32v2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt8 asfloat([This] b32v2_mt8 v) => v.BitCast<b32v2_mt8, float2_mt8>();
    [MethodImpl(256 | 512)]
    public static int2_mt8 asint([This] b32v2_mt8 v) => v.BitCast<b32v2_mt8, int2_mt8>();
    [MethodImpl(256 | 512)]
    public static uint2_mt8 asuint([This] b32v2_mt8 v) => v.BitCast<b32v2_mt8, uint2_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt8 asb32([This] b32v2_mt8 v) => v.BitCast<b32v2_mt8, b32v2_mt8>();
}

#endregion // b32v2_mt8

#region b32v2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float2_mt16 asfloat([This] b32v2_mt16 v) => v.BitCast<b32v2_mt16, float2_mt16>();
    [MethodImpl(256 | 512)]
    public static int2_mt16 asint([This] b32v2_mt16 v) => v.BitCast<b32v2_mt16, int2_mt16>();
    [MethodImpl(256 | 512)]
    public static uint2_mt16 asuint([This] b32v2_mt16 v) => v.BitCast<b32v2_mt16, uint2_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v2_mt16 asb32([This] b32v2_mt16 v) => v.BitCast<b32v2_mt16, b32v2_mt16>();
}

#endregion // b32v2_mt16

#region b32v3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt4 asfloat([This] b32v3_mt4 v) => v.BitCast<b32v3_mt4, float3_mt4>();
    [MethodImpl(256 | 512)]
    public static int3_mt4 asint([This] b32v3_mt4 v) => v.BitCast<b32v3_mt4, int3_mt4>();
    [MethodImpl(256 | 512)]
    public static uint3_mt4 asuint([This] b32v3_mt4 v) => v.BitCast<b32v3_mt4, uint3_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt4 asb32([This] b32v3_mt4 v) => v.BitCast<b32v3_mt4, b32v3_mt4>();
}

#endregion // b32v3_mt4

#region b32v3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt8 asfloat([This] b32v3_mt8 v) => v.BitCast<b32v3_mt8, float3_mt8>();
    [MethodImpl(256 | 512)]
    public static int3_mt8 asint([This] b32v3_mt8 v) => v.BitCast<b32v3_mt8, int3_mt8>();
    [MethodImpl(256 | 512)]
    public static uint3_mt8 asuint([This] b32v3_mt8 v) => v.BitCast<b32v3_mt8, uint3_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt8 asb32([This] b32v3_mt8 v) => v.BitCast<b32v3_mt8, b32v3_mt8>();
}

#endregion // b32v3_mt8

#region b32v3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float3_mt16 asfloat([This] b32v3_mt16 v) => v.BitCast<b32v3_mt16, float3_mt16>();
    [MethodImpl(256 | 512)]
    public static int3_mt16 asint([This] b32v3_mt16 v) => v.BitCast<b32v3_mt16, int3_mt16>();
    [MethodImpl(256 | 512)]
    public static uint3_mt16 asuint([This] b32v3_mt16 v) => v.BitCast<b32v3_mt16, uint3_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v3_mt16 asb32([This] b32v3_mt16 v) => v.BitCast<b32v3_mt16, b32v3_mt16>();
}

#endregion // b32v3_mt16

#region b32v4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt4 asfloat([This] b32v4_mt4 v) => v.BitCast<b32v4_mt4, float4_mt4>();
    [MethodImpl(256 | 512)]
    public static int4_mt4 asint([This] b32v4_mt4 v) => v.BitCast<b32v4_mt4, int4_mt4>();
    [MethodImpl(256 | 512)]
    public static uint4_mt4 asuint([This] b32v4_mt4 v) => v.BitCast<b32v4_mt4, uint4_mt4>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt4 asb32([This] b32v4_mt4 v) => v.BitCast<b32v4_mt4, b32v4_mt4>();
}

#endregion // b32v4_mt4

#region b32v4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt8 asfloat([This] b32v4_mt8 v) => v.BitCast<b32v4_mt8, float4_mt8>();
    [MethodImpl(256 | 512)]
    public static int4_mt8 asint([This] b32v4_mt8 v) => v.BitCast<b32v4_mt8, int4_mt8>();
    [MethodImpl(256 | 512)]
    public static uint4_mt8 asuint([This] b32v4_mt8 v) => v.BitCast<b32v4_mt8, uint4_mt8>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt8 asb32([This] b32v4_mt8 v) => v.BitCast<b32v4_mt8, b32v4_mt8>();
}

#endregion // b32v4_mt8

#region b32v4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static float4_mt16 asfloat([This] b32v4_mt16 v) => v.BitCast<b32v4_mt16, float4_mt16>();
    [MethodImpl(256 | 512)]
    public static int4_mt16 asint([This] b32v4_mt16 v) => v.BitCast<b32v4_mt16, int4_mt16>();
    [MethodImpl(256 | 512)]
    public static uint4_mt16 asuint([This] b32v4_mt16 v) => v.BitCast<b32v4_mt16, uint4_mt16>();
    [MethodImpl(256 | 512)]
    public static b32v4_mt16 asb32([This] b32v4_mt16 v) => v.BitCast<b32v4_mt16, b32v4_mt16>();
}

#endregion // b32v4_mt16

#region b64v2_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt4 asdouble([This] b64v2_mt4 v) => v.BitCast<b64v2_mt4, double2_mt4>();
    [MethodImpl(256 | 512)]
    public static long2_mt4 aslong([This] b64v2_mt4 v) => v.BitCast<b64v2_mt4, long2_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt4 asulong([This] b64v2_mt4 v) => v.BitCast<b64v2_mt4, ulong2_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt4 asb64([This] b64v2_mt4 v) => v.BitCast<b64v2_mt4, b64v2_mt4>();
}

#endregion // b64v2_mt4

#region b64v2_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt8 asdouble([This] b64v2_mt8 v) => v.BitCast<b64v2_mt8, double2_mt8>();
    [MethodImpl(256 | 512)]
    public static long2_mt8 aslong([This] b64v2_mt8 v) => v.BitCast<b64v2_mt8, long2_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt8 asulong([This] b64v2_mt8 v) => v.BitCast<b64v2_mt8, ulong2_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt8 asb64([This] b64v2_mt8 v) => v.BitCast<b64v2_mt8, b64v2_mt8>();
}

#endregion // b64v2_mt8

#region b64v2_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double2_mt16 asdouble([This] b64v2_mt16 v) => v.BitCast<b64v2_mt16, double2_mt16>();
    [MethodImpl(256 | 512)]
    public static long2_mt16 aslong([This] b64v2_mt16 v) => v.BitCast<b64v2_mt16, long2_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong2_mt16 asulong([This] b64v2_mt16 v) => v.BitCast<b64v2_mt16, ulong2_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v2_mt16 asb64([This] b64v2_mt16 v) => v.BitCast<b64v2_mt16, b64v2_mt16>();
}

#endregion // b64v2_mt16

#region b64v3_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt4 asdouble([This] b64v3_mt4 v) => v.BitCast<b64v3_mt4, double3_mt4>();
    [MethodImpl(256 | 512)]
    public static long3_mt4 aslong([This] b64v3_mt4 v) => v.BitCast<b64v3_mt4, long3_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt4 asulong([This] b64v3_mt4 v) => v.BitCast<b64v3_mt4, ulong3_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt4 asb64([This] b64v3_mt4 v) => v.BitCast<b64v3_mt4, b64v3_mt4>();
}

#endregion // b64v3_mt4

#region b64v3_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt8 asdouble([This] b64v3_mt8 v) => v.BitCast<b64v3_mt8, double3_mt8>();
    [MethodImpl(256 | 512)]
    public static long3_mt8 aslong([This] b64v3_mt8 v) => v.BitCast<b64v3_mt8, long3_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt8 asulong([This] b64v3_mt8 v) => v.BitCast<b64v3_mt8, ulong3_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt8 asb64([This] b64v3_mt8 v) => v.BitCast<b64v3_mt8, b64v3_mt8>();
}

#endregion // b64v3_mt8

#region b64v3_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double3_mt16 asdouble([This] b64v3_mt16 v) => v.BitCast<b64v3_mt16, double3_mt16>();
    [MethodImpl(256 | 512)]
    public static long3_mt16 aslong([This] b64v3_mt16 v) => v.BitCast<b64v3_mt16, long3_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong3_mt16 asulong([This] b64v3_mt16 v) => v.BitCast<b64v3_mt16, ulong3_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v3_mt16 asb64([This] b64v3_mt16 v) => v.BitCast<b64v3_mt16, b64v3_mt16>();
}

#endregion // b64v3_mt16

#region b64v4_mt4

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt4 asdouble([This] b64v4_mt4 v) => v.BitCast<b64v4_mt4, double4_mt4>();
    [MethodImpl(256 | 512)]
    public static long4_mt4 aslong([This] b64v4_mt4 v) => v.BitCast<b64v4_mt4, long4_mt4>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt4 asulong([This] b64v4_mt4 v) => v.BitCast<b64v4_mt4, ulong4_mt4>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt4 asb64([This] b64v4_mt4 v) => v.BitCast<b64v4_mt4, b64v4_mt4>();
}

#endregion // b64v4_mt4

#region b64v4_mt8

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt8 asdouble([This] b64v4_mt8 v) => v.BitCast<b64v4_mt8, double4_mt8>();
    [MethodImpl(256 | 512)]
    public static long4_mt8 aslong([This] b64v4_mt8 v) => v.BitCast<b64v4_mt8, long4_mt8>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt8 asulong([This] b64v4_mt8 v) => v.BitCast<b64v4_mt8, ulong4_mt8>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt8 asb64([This] b64v4_mt8 v) => v.BitCast<b64v4_mt8, b64v4_mt8>();
}

#endregion // b64v4_mt8

#region b64v4_mt16

[Ex]
public static partial class math
{
    [MethodImpl(256 | 512)]
    public static double4_mt16 asdouble([This] b64v4_mt16 v) => v.BitCast<b64v4_mt16, double4_mt16>();
    [MethodImpl(256 | 512)]
    public static long4_mt16 aslong([This] b64v4_mt16 v) => v.BitCast<b64v4_mt16, long4_mt16>();
    [MethodImpl(256 | 512)]
    public static ulong4_mt16 asulong([This] b64v4_mt16 v) => v.BitCast<b64v4_mt16, ulong4_mt16>();
    [MethodImpl(256 | 512)]
    public static b64v4_mt16 asb64([This] b64v4_mt16 v) => v.BitCast<b64v4_mt16, b64v4_mt16>();
}

#endregion // b64v4_mt16
