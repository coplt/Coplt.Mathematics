// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float3_mt

public partial struct float3_mt 
{
    public readonly float4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // float3_mt

#region double3_mt

public partial struct double3_mt 
{
    public readonly double4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // double3_mt

#region int3_mt

public partial struct int3_mt 
{
    public readonly int4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // int3_mt

#region uint3_mt

public partial struct uint3_mt 
{
    public readonly uint4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // uint3_mt

#region long3_mt

public partial struct long3_mt 
{
    public readonly long4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // long3_mt

#region ulong3_mt

public partial struct ulong3_mt 
{
    public readonly ulong4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // ulong3_mt

#region b32v3_mt

public partial struct b32v3_mt 
{
    public readonly b32v4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // b32v3_mt

#region b64v3_mt

public partial struct b64v3_mt 
{
    public readonly b64v4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
}

#endregion // b64v3_mt
