// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float2_mt4

public partial struct float2_mt4 
{
    public readonly float2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly float2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public float2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public float2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly float2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly float2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // float2_mt4

#region float2_mt8

public partial struct float2_mt8 
{
    public readonly float2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly float2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public float2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public float2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly float2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly float2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // float2_mt8

#region float2_mt16

public partial struct float2_mt16 
{
    public readonly float2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly float2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public float2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public float2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly float2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly float2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // float2_mt16

#region double2_mt4

public partial struct double2_mt4 
{
    public readonly double2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly double2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public double2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public double2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly double2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly double2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // double2_mt4

#region double2_mt8

public partial struct double2_mt8 
{
    public readonly double2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly double2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public double2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public double2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly double2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly double2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // double2_mt8

#region double2_mt16

public partial struct double2_mt16 
{
    public readonly double2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly double2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public double2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public double2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly double2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly double2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // double2_mt16

#region int2_mt4

public partial struct int2_mt4 
{
    public readonly int2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly int2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public int2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public int2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly int2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly int2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // int2_mt4

#region int2_mt8

public partial struct int2_mt8 
{
    public readonly int2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly int2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public int2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public int2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly int2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly int2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // int2_mt8

#region int2_mt16

public partial struct int2_mt16 
{
    public readonly int2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly int2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public int2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public int2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly int2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly int2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // int2_mt16

#region uint2_mt4

public partial struct uint2_mt4 
{
    public readonly uint2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly uint2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public uint2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public uint2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly uint2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly uint2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // uint2_mt4

#region uint2_mt8

public partial struct uint2_mt8 
{
    public readonly uint2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly uint2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public uint2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public uint2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly uint2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly uint2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // uint2_mt8

#region uint2_mt16

public partial struct uint2_mt16 
{
    public readonly uint2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly uint2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public uint2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public uint2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly uint2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly uint2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // uint2_mt16

#region long2_mt4

public partial struct long2_mt4 
{
    public readonly long2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly long2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public long2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public long2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly long2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly long2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // long2_mt4

#region long2_mt8

public partial struct long2_mt8 
{
    public readonly long2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly long2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public long2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public long2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly long2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly long2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // long2_mt8

#region long2_mt16

public partial struct long2_mt16 
{
    public readonly long2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly long2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public long2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public long2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly long2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly long2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // long2_mt16

#region ulong2_mt4

public partial struct ulong2_mt4 
{
    public readonly ulong2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly ulong2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public ulong2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public ulong2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly ulong2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly ulong2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // ulong2_mt4

#region ulong2_mt8

public partial struct ulong2_mt8 
{
    public readonly ulong2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly ulong2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public ulong2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public ulong2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly ulong2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly ulong2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // ulong2_mt8

#region ulong2_mt16

public partial struct ulong2_mt16 
{
    public readonly ulong2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly ulong2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public ulong2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public ulong2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly ulong2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly ulong2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // ulong2_mt16

#region b32v2_mt4

public partial struct b32v2_mt4 
{
    public readonly b32v2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b32v2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b32v2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b32v2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b32v2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b32v2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b32v2_mt4

#region b32v2_mt8

public partial struct b32v2_mt8 
{
    public readonly b32v2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b32v2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b32v2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b32v2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b32v2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b32v2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b32v2_mt8

#region b32v2_mt16

public partial struct b32v2_mt16 
{
    public readonly b32v2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b32v2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b32v2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b32v2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b32v2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b32v2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b32v2_mt16

#region b64v2_mt4

public partial struct b64v2_mt4 
{
    public readonly b64v2_mt4 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b64v2_mt4 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b64v2_mt4 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt4 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt4 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b64v2_mt4 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b64v2_mt4 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b64v2_mt4 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b64v2_mt4

#region b64v2_mt8

public partial struct b64v2_mt8 
{
    public readonly b64v2_mt8 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b64v2_mt8 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b64v2_mt8 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt8 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt8 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b64v2_mt8 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b64v2_mt8 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b64v2_mt8 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b64v2_mt8

#region b64v2_mt16

public partial struct b64v2_mt16 
{
    public readonly b64v2_mt16 xx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public readonly b64v2_mt16 rr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x);
    }
    public b64v2_mt16 xy
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt16 rg
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v2_mt16 yx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public b64v2_mt16 gr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x);
        [MethodImpl(256 | 512)]
        set => this = value.yx;
    }
    public readonly b64v2_mt16 yy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
    public readonly b64v2_mt16 gg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y);
    }
}

#endregion // b64v2_mt16
