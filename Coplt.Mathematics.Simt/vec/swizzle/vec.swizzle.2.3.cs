// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float2_mt

public partial struct float2_mt 
{
    public readonly float3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly float3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly float3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly float3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly float3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly float3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly float3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly float3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly float3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly float3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly float3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly float3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly float3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly float3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly float3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly float3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // float2_mt

#region double2_mt

public partial struct double2_mt 
{
    public readonly double3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly double3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly double3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly double3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly double3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly double3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly double3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly double3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly double3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly double3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly double3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly double3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly double3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly double3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly double3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly double3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // double2_mt

#region int2_mt

public partial struct int2_mt 
{
    public readonly int3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly int3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly int3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly int3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly int3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly int3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly int3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly int3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly int3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly int3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly int3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly int3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly int3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly int3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly int3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly int3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // int2_mt

#region uint2_mt

public partial struct uint2_mt 
{
    public readonly uint3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly uint3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly uint3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly uint3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly uint3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly uint3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly uint3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly uint3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly uint3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly uint3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly uint3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly uint3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly uint3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly uint3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly uint3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly uint3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // uint2_mt

#region long2_mt

public partial struct long2_mt 
{
    public readonly long3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly long3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly long3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly long3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly long3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly long3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly long3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly long3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly long3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly long3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly long3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly long3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly long3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly long3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly long3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly long3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // long2_mt

#region ulong2_mt

public partial struct ulong2_mt 
{
    public readonly ulong3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly ulong3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly ulong3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly ulong3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly ulong3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly ulong3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly ulong3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly ulong3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly ulong3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly ulong3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly ulong3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly ulong3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly ulong3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly ulong3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly ulong3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly ulong3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // ulong2_mt

#region b32v2_mt

public partial struct b32v2_mt 
{
    public readonly b32v3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b32v3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b32v3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b32v3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b32v3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b32v3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b32v3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b32v3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b32v3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b32v3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b32v3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b32v3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b32v3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b32v3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b32v3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b32v3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // b32v2_mt

#region b64v2_mt

public partial struct b64v2_mt 
{
    public readonly b64v3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b64v3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b64v3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b64v3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b64v3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b64v3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b64v3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b64v3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b64v3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b64v3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b64v3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b64v3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b64v3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b64v3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b64v3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b64v3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
}

#endregion // b64v2_mt
