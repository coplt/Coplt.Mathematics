// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float4_mt

public partial struct float4_mt 
{
    public readonly float4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public float4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly float4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public float4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public float4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly float4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public float4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public float4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly float4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly float4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public float4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public float4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly float4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly float4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public float4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public float4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly float4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly float4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public float4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public float4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly float4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public float4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public float4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly float4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly float4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public float4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public float4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly float4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public float4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public float4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly float4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly float4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public float4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public float4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly float4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly float4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public float4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public float4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly float4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly float4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public float4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public float4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly float4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public float4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public float4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly float4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly float4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public float4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public float4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly float4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public float4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public float4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly float4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly float4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public float4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public float4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly float4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly float4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public float4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public float4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly float4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly float4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public float4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public float4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly float4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly float4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public float4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public float4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly float4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly float4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public float4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public float4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly float4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly float4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public float4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public float4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly float4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly float4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public float4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public float4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly float4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly float4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public float4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public float4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly float4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly float4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public float4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public float4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly float4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly float4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // float4_mt

#region double4_mt

public partial struct double4_mt 
{
    public readonly double4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public double4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly double4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public double4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public double4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly double4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public double4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public double4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly double4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly double4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public double4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public double4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly double4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly double4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public double4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public double4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly double4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly double4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public double4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public double4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly double4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public double4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public double4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly double4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly double4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public double4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public double4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly double4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public double4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public double4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly double4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly double4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public double4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public double4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly double4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly double4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public double4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public double4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly double4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly double4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public double4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public double4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly double4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public double4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public double4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly double4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly double4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public double4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public double4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly double4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public double4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public double4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly double4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly double4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public double4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public double4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly double4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly double4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public double4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public double4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly double4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly double4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public double4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public double4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly double4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly double4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public double4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public double4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly double4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly double4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public double4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public double4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly double4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly double4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public double4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public double4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly double4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly double4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public double4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public double4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly double4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly double4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public double4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public double4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly double4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly double4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public double4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public double4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly double4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly double4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // double4_mt

#region int4_mt

public partial struct int4_mt 
{
    public readonly int4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public int4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly int4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public int4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public int4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly int4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public int4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public int4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly int4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly int4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public int4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public int4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly int4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly int4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public int4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public int4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly int4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly int4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public int4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public int4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly int4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public int4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public int4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly int4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly int4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public int4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public int4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly int4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public int4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public int4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly int4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly int4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public int4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public int4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly int4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly int4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public int4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public int4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly int4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly int4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public int4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public int4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly int4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public int4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public int4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly int4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly int4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public int4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public int4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly int4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public int4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public int4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly int4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly int4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public int4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public int4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly int4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly int4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public int4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public int4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly int4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly int4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public int4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public int4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly int4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly int4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public int4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public int4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly int4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly int4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public int4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public int4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly int4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly int4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public int4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public int4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly int4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly int4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public int4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public int4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly int4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly int4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public int4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public int4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly int4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly int4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public int4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public int4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly int4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly int4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // int4_mt

#region uint4_mt

public partial struct uint4_mt 
{
    public readonly uint4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public uint4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly uint4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public uint4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public uint4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly uint4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public uint4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public uint4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly uint4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly uint4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public uint4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public uint4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly uint4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly uint4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public uint4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public uint4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly uint4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly uint4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public uint4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public uint4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly uint4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public uint4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public uint4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly uint4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly uint4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public uint4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public uint4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly uint4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public uint4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public uint4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly uint4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly uint4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public uint4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public uint4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly uint4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly uint4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public uint4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public uint4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly uint4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly uint4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public uint4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public uint4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly uint4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public uint4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public uint4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly uint4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly uint4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public uint4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public uint4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly uint4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public uint4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public uint4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly uint4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly uint4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public uint4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public uint4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly uint4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly uint4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public uint4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public uint4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly uint4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly uint4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public uint4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public uint4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly uint4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly uint4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public uint4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public uint4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly uint4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly uint4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public uint4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public uint4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly uint4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly uint4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public uint4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public uint4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly uint4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly uint4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public uint4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public uint4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly uint4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly uint4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public uint4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public uint4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly uint4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly uint4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public uint4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public uint4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly uint4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly uint4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // uint4_mt

#region long4_mt

public partial struct long4_mt 
{
    public readonly long4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public long4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly long4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public long4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public long4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly long4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public long4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public long4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly long4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly long4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public long4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public long4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly long4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly long4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public long4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public long4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly long4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly long4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public long4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public long4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly long4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public long4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public long4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly long4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly long4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public long4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public long4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly long4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public long4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public long4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly long4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly long4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public long4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public long4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly long4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly long4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public long4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public long4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly long4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly long4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public long4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public long4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly long4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public long4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public long4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly long4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly long4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public long4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public long4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly long4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public long4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public long4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly long4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly long4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public long4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public long4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly long4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly long4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public long4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public long4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly long4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly long4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public long4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public long4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly long4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly long4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public long4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public long4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly long4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly long4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public long4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public long4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly long4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly long4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public long4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public long4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly long4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly long4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public long4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public long4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly long4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly long4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public long4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public long4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly long4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly long4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public long4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public long4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly long4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly long4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // long4_mt

#region ulong4_mt

public partial struct ulong4_mt 
{
    public readonly ulong4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public ulong4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly ulong4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public ulong4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public ulong4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly ulong4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public ulong4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public ulong4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly ulong4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly ulong4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public ulong4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public ulong4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly ulong4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly ulong4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public ulong4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public ulong4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly ulong4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly ulong4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public ulong4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public ulong4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly ulong4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public ulong4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public ulong4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly ulong4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly ulong4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public ulong4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public ulong4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly ulong4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public ulong4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public ulong4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly ulong4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly ulong4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public ulong4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public ulong4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly ulong4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly ulong4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public ulong4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public ulong4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly ulong4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly ulong4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public ulong4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public ulong4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly ulong4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public ulong4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public ulong4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly ulong4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly ulong4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public ulong4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public ulong4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly ulong4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public ulong4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public ulong4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly ulong4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly ulong4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public ulong4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public ulong4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly ulong4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly ulong4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public ulong4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public ulong4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly ulong4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly ulong4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public ulong4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public ulong4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly ulong4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly ulong4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public ulong4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public ulong4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly ulong4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly ulong4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public ulong4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public ulong4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly ulong4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly ulong4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public ulong4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public ulong4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly ulong4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly ulong4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public ulong4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public ulong4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly ulong4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly ulong4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public ulong4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public ulong4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly ulong4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly ulong4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public ulong4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public ulong4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly ulong4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly ulong4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // ulong4_mt

#region b32v4_mt

public partial struct b32v4_mt 
{
    public readonly b32v4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b32v4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b32v4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b32v4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b32v4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b32v4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b32v4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b32v4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b32v4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b32v4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b32v4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b32v4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b32v4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b32v4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b32v4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b32v4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b32v4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b32v4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b32v4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b32v4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b32v4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b32v4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b32v4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b32v4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b32v4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b32v4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b32v4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b32v4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b32v4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b32v4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b32v4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b32v4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b32v4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b32v4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b32v4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b32v4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b32v4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b32v4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b32v4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b32v4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b32v4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b32v4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b32v4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b32v4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b32v4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b32v4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b32v4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b32v4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b32v4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b32v4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b32v4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b32v4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b32v4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b32v4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b32v4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b32v4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b32v4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b32v4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b32v4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b32v4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b32v4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b32v4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b32v4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b32v4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b32v4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b32v4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b32v4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b32v4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b32v4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b32v4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b32v4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b32v4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b32v4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b32v4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b32v4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b32v4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b32v4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b32v4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b32v4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b32v4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b32v4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b32v4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b32v4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b32v4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b32v4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b32v4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b32v4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b32v4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b32v4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b32v4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b32v4_mt

#region b64v4_mt

public partial struct b64v4_mt 
{
    public readonly b64v4_mt xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b64v4_mt xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v4_mt rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v4_mt xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b64v4_mt rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b64v4_mt xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b64v4_mt rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b64v4_mt xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b64v4_mt xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b64v4_mt rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b64v4_mt xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b64v4_mt rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b64v4_mt xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b64v4_mt rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b64v4_mt xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b64v4_mt ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b64v4_mt xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b64v4_mt ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b64v4_mt xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b64v4_mt rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b64v4_mt xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b64v4_mt rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b64v4_mt xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b64v4_mt yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b64v4_mt grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b64v4_mt yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b64v4_mt grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b64v4_mt yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b64v4_mt grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b64v4_mt yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b64v4_mt yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b64v4_mt gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b64v4_mt yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b64v4_mt gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b64v4_mt yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b64v4_mt gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b64v4_mt yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b64v4_mt garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b64v4_mt ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b64v4_mt garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b64v4_mt ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b64v4_mt gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b64v4_mt ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b64v4_mt gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b64v4_mt ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b64v4_mt zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b64v4_mt brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b64v4_mt zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b64v4_mt brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b64v4_mt zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b64v4_mt brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b64v4_mt zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b64v4_mt zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b64v4_mt bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b64v4_mt zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b64v4_mt bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b64v4_mt zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b64v4_mt bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b64v4_mt zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b64v4_mt barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b64v4_mt zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b64v4_mt barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b64v4_mt zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b64v4_mt bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b64v4_mt zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b64v4_mt bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b64v4_mt zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b64v4_mt argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b64v4_mt wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b64v4_mt argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b64v4_mt wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b64v4_mt arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b64v4_mt wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b64v4_mt arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b64v4_mt wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b64v4_mt agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b64v4_mt wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b64v4_mt agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b64v4_mt wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b64v4_mt agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b64v4_mt wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b64v4_mt agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b64v4_mt wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b64v4_mt abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b64v4_mt wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b64v4_mt abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b64v4_mt wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b64v4_mt abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b64v4_mt wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b64v4_mt abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b64v4_mt wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b64v4_mt aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b64v4_mt
