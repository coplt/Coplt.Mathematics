// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt;

#region float3_mt

public partial struct float3_mt 
{
    public readonly float3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly float3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly float3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly float3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly float3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly float3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly float3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly float3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly float3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly float3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public float3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly float3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public float3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public float3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly float3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly float3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly float3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly float3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly float3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly float3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public float3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public float3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly float3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly float3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly float3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly float3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly float3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly float3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public float3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public float3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly float3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly float3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly float3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly float3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly float3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly float3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public float3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public float3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly float3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly float3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public float3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public float3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly float3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly float3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly float3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly float3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly float3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly float3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly float3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly float3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly float3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly float3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // float3_mt

#region double3_mt

public partial struct double3_mt 
{
    public readonly double3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly double3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly double3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly double3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly double3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly double3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly double3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly double3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly double3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly double3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public double3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly double3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public double3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public double3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly double3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly double3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly double3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly double3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly double3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly double3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public double3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public double3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly double3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly double3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly double3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly double3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly double3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly double3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public double3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public double3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly double3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly double3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly double3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly double3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly double3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly double3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public double3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public double3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly double3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly double3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public double3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public double3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly double3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly double3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly double3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly double3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly double3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly double3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly double3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly double3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly double3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly double3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // double3_mt

#region int3_mt

public partial struct int3_mt 
{
    public readonly int3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly int3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly int3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly int3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly int3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly int3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly int3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly int3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly int3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly int3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public int3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly int3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public int3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public int3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly int3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly int3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly int3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly int3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly int3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly int3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public int3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public int3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly int3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly int3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly int3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly int3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly int3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly int3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public int3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public int3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly int3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly int3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly int3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly int3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly int3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly int3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public int3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public int3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly int3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly int3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public int3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public int3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly int3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly int3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly int3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly int3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly int3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly int3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly int3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly int3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly int3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly int3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // int3_mt

#region uint3_mt

public partial struct uint3_mt 
{
    public readonly uint3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly uint3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly uint3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly uint3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly uint3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly uint3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly uint3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly uint3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly uint3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly uint3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public uint3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly uint3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public uint3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public uint3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly uint3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly uint3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly uint3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly uint3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly uint3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly uint3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public uint3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public uint3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly uint3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly uint3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly uint3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly uint3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly uint3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly uint3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public uint3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public uint3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly uint3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly uint3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly uint3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly uint3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly uint3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly uint3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public uint3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public uint3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly uint3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly uint3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public uint3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public uint3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly uint3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly uint3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly uint3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly uint3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly uint3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly uint3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly uint3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly uint3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly uint3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly uint3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // uint3_mt

#region long3_mt

public partial struct long3_mt 
{
    public readonly long3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly long3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly long3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly long3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly long3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly long3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly long3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly long3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly long3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly long3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public long3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly long3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public long3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public long3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly long3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly long3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly long3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly long3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly long3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly long3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public long3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public long3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly long3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly long3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly long3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly long3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly long3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly long3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public long3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public long3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly long3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly long3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly long3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly long3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly long3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly long3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public long3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public long3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly long3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly long3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public long3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public long3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly long3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly long3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly long3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly long3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly long3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly long3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly long3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly long3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly long3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly long3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // long3_mt

#region ulong3_mt

public partial struct ulong3_mt 
{
    public readonly ulong3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly ulong3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly ulong3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly ulong3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly ulong3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly ulong3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly ulong3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly ulong3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly ulong3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly ulong3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public ulong3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly ulong3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public ulong3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public ulong3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly ulong3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly ulong3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly ulong3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly ulong3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly ulong3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly ulong3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public ulong3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public ulong3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly ulong3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly ulong3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly ulong3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly ulong3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly ulong3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly ulong3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public ulong3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public ulong3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly ulong3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly ulong3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly ulong3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly ulong3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly ulong3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly ulong3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public ulong3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public ulong3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly ulong3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly ulong3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public ulong3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public ulong3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly ulong3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly ulong3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly ulong3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly ulong3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly ulong3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly ulong3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly ulong3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly ulong3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly ulong3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly ulong3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // ulong3_mt

#region b32v3_mt

public partial struct b32v3_mt 
{
    public readonly b32v3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b32v3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b32v3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b32v3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b32v3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly b32v3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly b32v3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b32v3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b32v3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b32v3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public b32v3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly b32v3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public b32v3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public b32v3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly b32v3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly b32v3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly b32v3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b32v3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b32v3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b32v3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public b32v3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public b32v3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly b32v3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b32v3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b32v3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b32v3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b32v3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly b32v3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public b32v3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public b32v3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly b32v3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly b32v3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly b32v3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly b32v3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly b32v3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly b32v3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public b32v3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public b32v3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly b32v3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly b32v3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public b32v3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public b32v3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly b32v3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly b32v3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly b32v3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly b32v3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly b32v3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly b32v3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly b32v3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly b32v3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly b32v3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly b32v3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // b32v3_mt

#region b64v3_mt

public partial struct b64v3_mt 
{
    public readonly b64v3_mt xxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b64v3_mt rrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x);
    }
    public readonly b64v3_mt xxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b64v3_mt rrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y);
    }
    public readonly b64v3_mt xxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly b64v3_mt rrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z);
    }
    public readonly b64v3_mt xyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b64v3_mt rgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x);
    }
    public readonly b64v3_mt xyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public readonly b64v3_mt rgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y);
    }
    public b64v3_mt xyz
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v3_mt rgb
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v3_mt xzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public readonly b64v3_mt rbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x);
    }
    public b64v3_mt xzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public b64v3_mt rbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xzy;
    }
    public readonly b64v3_mt xzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly b64v3_mt rbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z);
    }
    public readonly b64v3_mt yxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b64v3_mt grr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x);
    }
    public readonly b64v3_mt yxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public readonly b64v3_mt grg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y);
    }
    public b64v3_mt yxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public b64v3_mt grb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxz;
    }
    public readonly b64v3_mt yyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b64v3_mt ggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x);
    }
    public readonly b64v3_mt yyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b64v3_mt ggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y);
    }
    public readonly b64v3_mt yyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public readonly b64v3_mt ggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z);
    }
    public b64v3_mt yzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public b64v3_mt gbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.zxy;
    }
    public readonly b64v3_mt yzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly b64v3_mt gbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y);
    }
    public readonly b64v3_mt yzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly b64v3_mt gbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z);
    }
    public readonly b64v3_mt zxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public readonly b64v3_mt brr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x);
    }
    public b64v3_mt zxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public b64v3_mt brg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.yzx;
    }
    public readonly b64v3_mt zxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public readonly b64v3_mt brb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z);
    }
    public b64v3_mt zyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public b64v3_mt bgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.zyx;
    }
    public readonly b64v3_mt zyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly b64v3_mt bgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y);
    }
    public readonly b64v3_mt zyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly b64v3_mt bgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z);
    }
    public readonly b64v3_mt zzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly b64v3_mt bbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x);
    }
    public readonly b64v3_mt zzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly b64v3_mt bbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y);
    }
    public readonly b64v3_mt zzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
    public readonly b64v3_mt bbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z);
    }
}

#endregion // b64v3_mt
