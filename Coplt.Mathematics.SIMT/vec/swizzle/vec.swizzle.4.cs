// generated by template, do not modify manually

namespace Coplt.Mathematics.SIMT;

#region float4_mt4

public partial struct float4_mt4 
{
    public readonly float4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public float4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly float4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public float4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public float4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly float4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public float4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public float4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly float4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly float4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public float4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public float4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly float4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly float4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public float4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public float4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly float4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly float4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public float4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public float4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly float4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public float4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public float4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly float4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly float4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public float4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public float4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly float4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public float4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public float4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly float4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly float4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public float4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public float4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly float4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly float4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public float4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public float4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly float4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly float4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public float4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public float4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly float4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public float4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public float4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly float4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly float4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public float4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public float4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly float4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public float4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public float4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly float4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly float4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public float4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public float4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly float4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly float4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public float4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public float4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly float4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly float4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public float4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public float4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly float4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly float4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public float4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public float4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly float4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly float4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public float4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public float4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly float4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly float4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public float4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public float4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly float4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly float4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public float4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public float4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly float4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly float4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public float4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public float4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly float4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly float4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public float4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public float4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly float4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly float4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // float4_mt4

#region float4_mt8

public partial struct float4_mt8 
{
    public readonly float4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public float4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly float4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public float4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public float4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly float4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public float4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public float4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly float4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly float4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public float4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public float4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly float4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly float4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public float4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public float4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly float4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly float4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public float4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public float4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly float4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public float4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public float4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly float4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly float4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public float4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public float4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly float4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public float4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public float4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly float4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly float4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public float4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public float4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly float4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly float4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public float4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public float4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly float4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly float4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public float4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public float4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly float4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public float4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public float4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly float4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly float4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public float4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public float4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly float4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public float4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public float4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly float4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly float4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public float4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public float4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly float4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly float4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public float4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public float4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly float4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly float4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public float4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public float4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly float4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly float4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public float4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public float4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly float4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly float4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public float4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public float4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly float4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly float4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public float4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public float4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly float4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly float4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public float4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public float4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly float4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly float4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public float4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public float4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly float4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly float4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public float4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public float4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly float4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly float4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // float4_mt8

#region float4_mt16

public partial struct float4_mt16 
{
    public readonly float4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public float4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly float4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public float4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public float4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly float4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public float4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public float4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly float4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly float4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public float4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public float4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly float4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly float4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public float4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public float4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly float4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly float4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public float4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public float4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly float4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public float4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public float4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly float4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly float4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public float4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public float4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly float4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public float4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public float4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly float4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly float4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public float4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public float4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly float4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly float4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public float4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public float4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly float4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly float4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public float4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public float4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly float4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public float4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public float4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly float4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly float4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public float4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public float4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly float4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public float4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public float4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly float4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly float4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public float4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public float4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly float4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly float4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public float4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public float4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly float4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly float4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public float4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public float4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly float4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly float4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public float4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public float4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly float4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly float4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public float4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public float4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly float4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly float4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public float4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public float4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly float4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly float4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public float4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public float4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly float4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly float4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public float4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public float4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly float4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly float4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public float4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public float4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly float4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly float4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // float4_mt16

#region float4_mt32

public partial struct float4_mt32 
{
    public readonly float4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly float4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly float4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly float4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly float4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly float4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly float4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly float4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly float4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly float4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly float4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly float4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly float4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly float4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly float4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly float4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly float4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly float4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly float4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly float4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly float4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly float4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly float4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly float4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly float4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly float4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly float4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly float4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public float4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public float4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly float4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly float4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly float4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public float4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public float4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly float4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly float4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly float4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly float4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly float4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly float4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly float4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly float4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly float4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public float4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public float4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly float4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly float4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly float4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly float4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly float4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly float4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public float4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public float4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly float4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly float4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly float4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly float4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly float4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly float4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly float4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly float4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly float4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public float4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public float4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly float4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly float4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly float4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public float4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public float4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly float4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly float4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly float4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly float4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly float4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly float4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly float4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly float4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly float4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly float4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly float4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly float4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly float4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly float4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly float4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly float4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly float4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly float4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public float4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public float4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly float4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly float4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly float4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public float4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public float4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly float4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly float4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly float4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly float4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly float4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly float4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly float4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly float4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly float4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly float4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly float4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly float4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly float4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly float4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly float4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly float4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly float4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly float4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly float4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly float4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly float4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public float4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public float4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly float4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly float4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly float4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly float4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly float4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly float4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly float4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly float4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly float4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public float4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public float4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly float4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly float4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly float4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly float4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly float4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly float4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public float4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public float4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly float4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly float4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly float4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly float4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly float4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly float4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public float4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public float4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly float4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly float4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly float4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly float4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly float4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly float4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly float4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly float4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly float4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly float4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly float4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly float4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly float4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly float4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly float4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public float4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public float4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly float4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly float4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly float4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly float4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly float4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly float4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public float4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public float4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly float4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly float4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly float4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly float4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly float4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly float4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public float4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public float4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly float4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly float4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly float4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly float4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly float4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly float4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly float4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly float4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly float4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public float4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public float4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly float4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly float4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly float4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly float4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly float4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly float4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly float4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly float4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly float4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly float4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly float4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly float4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly float4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly float4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly float4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly float4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly float4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly float4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly float4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly float4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly float4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public float4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public float4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly float4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly float4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly float4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public float4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public float4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly float4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly float4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly float4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly float4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly float4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly float4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly float4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly float4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly float4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly float4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly float4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly float4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly float4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly float4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly float4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly float4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly float4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly float4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public float4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public float4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly float4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly float4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly float4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public float4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public float4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly float4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly float4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly float4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly float4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly float4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly float4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly float4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly float4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly float4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public float4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public float4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly float4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly float4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly float4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly float4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly float4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly float4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public float4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public float4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly float4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly float4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly float4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly float4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly float4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly float4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly float4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly float4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly float4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public float4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public float4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly float4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly float4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly float4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public float4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public float4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly float4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly float4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly float4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly float4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly float4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly float4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly float4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly float4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly float4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly float4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly float4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly float4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly float4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly float4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly float4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly float4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly float4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly float4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly float4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly float4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly float4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly float4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly float4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly float4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly float4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly float4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly float4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly float4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // float4_mt32

#region double4_mt4

public partial struct double4_mt4 
{
    public readonly double4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public double4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly double4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public double4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public double4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly double4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public double4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public double4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly double4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly double4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public double4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public double4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly double4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly double4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public double4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public double4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly double4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly double4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public double4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public double4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly double4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public double4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public double4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly double4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly double4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public double4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public double4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly double4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public double4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public double4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly double4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly double4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public double4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public double4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly double4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly double4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public double4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public double4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly double4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly double4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public double4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public double4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly double4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public double4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public double4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly double4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly double4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public double4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public double4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly double4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public double4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public double4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly double4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly double4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public double4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public double4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly double4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly double4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public double4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public double4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly double4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly double4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public double4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public double4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly double4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly double4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public double4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public double4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly double4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly double4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public double4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public double4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly double4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly double4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public double4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public double4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly double4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly double4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public double4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public double4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly double4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly double4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public double4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public double4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly double4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly double4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public double4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public double4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly double4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly double4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // double4_mt4

#region double4_mt8

public partial struct double4_mt8 
{
    public readonly double4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public double4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly double4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public double4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public double4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly double4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public double4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public double4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly double4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly double4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public double4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public double4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly double4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly double4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public double4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public double4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly double4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly double4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public double4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public double4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly double4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public double4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public double4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly double4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly double4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public double4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public double4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly double4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public double4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public double4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly double4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly double4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public double4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public double4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly double4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly double4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public double4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public double4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly double4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly double4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public double4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public double4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly double4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public double4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public double4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly double4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly double4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public double4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public double4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly double4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public double4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public double4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly double4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly double4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public double4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public double4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly double4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly double4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public double4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public double4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly double4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly double4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public double4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public double4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly double4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly double4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public double4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public double4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly double4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly double4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public double4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public double4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly double4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly double4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public double4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public double4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly double4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly double4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public double4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public double4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly double4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly double4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public double4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public double4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly double4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly double4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public double4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public double4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly double4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly double4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // double4_mt8

#region double4_mt16

public partial struct double4_mt16 
{
    public readonly double4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public double4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly double4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public double4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public double4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly double4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public double4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public double4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly double4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly double4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public double4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public double4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly double4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly double4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public double4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public double4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly double4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly double4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public double4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public double4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly double4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public double4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public double4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly double4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly double4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public double4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public double4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly double4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public double4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public double4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly double4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly double4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public double4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public double4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly double4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly double4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public double4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public double4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly double4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly double4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public double4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public double4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly double4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public double4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public double4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly double4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly double4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public double4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public double4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly double4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public double4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public double4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly double4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly double4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public double4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public double4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly double4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly double4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public double4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public double4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly double4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly double4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public double4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public double4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly double4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly double4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public double4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public double4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly double4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly double4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public double4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public double4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly double4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly double4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public double4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public double4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly double4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly double4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public double4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public double4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly double4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly double4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public double4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public double4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly double4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly double4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public double4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public double4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly double4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly double4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // double4_mt16

#region double4_mt32

public partial struct double4_mt32 
{
    public readonly double4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly double4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly double4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly double4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly double4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly double4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly double4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly double4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly double4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly double4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly double4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly double4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly double4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly double4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly double4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly double4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly double4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly double4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly double4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly double4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly double4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly double4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly double4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly double4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly double4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly double4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly double4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly double4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public double4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public double4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly double4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly double4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly double4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public double4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public double4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly double4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly double4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly double4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly double4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly double4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly double4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly double4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly double4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly double4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public double4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public double4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly double4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly double4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly double4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly double4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly double4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly double4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public double4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public double4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly double4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly double4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly double4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly double4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly double4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly double4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly double4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly double4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly double4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public double4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public double4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly double4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly double4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly double4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public double4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public double4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly double4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly double4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly double4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly double4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly double4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly double4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly double4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly double4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly double4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly double4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly double4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly double4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly double4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly double4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly double4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly double4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly double4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly double4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public double4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public double4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly double4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly double4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly double4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public double4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public double4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly double4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly double4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly double4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly double4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly double4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly double4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly double4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly double4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly double4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly double4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly double4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly double4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly double4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly double4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly double4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly double4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly double4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly double4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly double4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly double4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly double4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public double4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public double4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly double4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly double4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly double4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly double4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly double4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly double4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly double4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly double4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly double4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public double4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public double4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly double4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly double4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly double4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly double4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly double4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly double4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public double4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public double4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly double4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly double4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly double4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly double4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly double4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly double4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public double4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public double4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly double4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly double4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly double4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly double4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly double4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly double4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly double4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly double4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly double4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly double4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly double4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly double4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly double4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly double4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly double4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public double4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public double4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly double4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly double4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly double4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly double4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly double4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly double4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public double4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public double4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly double4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly double4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly double4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly double4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly double4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly double4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public double4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public double4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly double4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly double4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly double4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly double4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly double4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly double4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly double4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly double4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly double4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public double4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public double4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly double4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly double4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly double4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly double4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly double4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly double4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly double4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly double4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly double4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly double4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly double4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly double4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly double4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly double4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly double4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly double4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly double4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly double4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly double4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly double4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly double4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public double4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public double4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly double4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly double4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly double4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public double4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public double4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly double4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly double4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly double4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly double4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly double4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly double4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly double4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly double4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly double4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly double4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly double4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly double4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly double4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly double4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly double4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly double4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly double4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly double4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public double4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public double4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly double4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly double4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly double4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public double4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public double4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly double4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly double4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly double4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly double4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly double4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly double4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly double4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly double4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly double4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public double4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public double4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly double4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly double4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly double4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly double4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly double4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly double4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public double4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public double4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly double4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly double4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly double4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly double4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly double4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly double4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly double4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly double4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly double4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public double4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public double4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly double4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly double4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly double4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public double4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public double4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly double4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly double4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly double4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly double4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly double4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly double4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly double4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly double4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly double4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly double4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly double4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly double4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly double4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly double4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly double4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly double4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly double4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly double4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly double4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly double4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly double4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly double4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly double4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly double4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly double4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly double4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly double4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly double4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // double4_mt32

#region int4_mt4

public partial struct int4_mt4 
{
    public readonly int4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public int4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly int4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public int4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public int4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly int4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public int4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public int4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly int4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly int4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public int4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public int4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly int4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly int4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public int4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public int4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly int4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly int4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public int4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public int4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly int4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public int4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public int4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly int4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly int4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public int4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public int4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly int4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public int4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public int4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly int4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly int4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public int4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public int4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly int4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly int4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public int4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public int4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly int4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly int4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public int4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public int4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly int4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public int4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public int4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly int4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly int4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public int4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public int4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly int4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public int4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public int4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly int4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly int4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public int4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public int4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly int4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly int4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public int4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public int4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly int4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly int4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public int4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public int4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly int4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly int4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public int4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public int4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly int4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly int4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public int4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public int4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly int4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly int4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public int4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public int4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly int4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly int4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public int4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public int4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly int4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly int4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public int4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public int4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly int4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly int4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public int4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public int4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly int4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly int4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // int4_mt4

#region int4_mt8

public partial struct int4_mt8 
{
    public readonly int4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public int4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly int4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public int4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public int4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly int4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public int4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public int4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly int4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly int4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public int4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public int4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly int4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly int4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public int4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public int4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly int4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly int4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public int4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public int4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly int4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public int4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public int4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly int4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly int4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public int4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public int4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly int4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public int4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public int4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly int4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly int4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public int4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public int4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly int4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly int4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public int4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public int4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly int4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly int4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public int4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public int4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly int4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public int4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public int4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly int4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly int4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public int4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public int4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly int4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public int4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public int4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly int4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly int4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public int4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public int4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly int4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly int4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public int4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public int4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly int4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly int4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public int4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public int4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly int4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly int4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public int4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public int4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly int4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly int4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public int4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public int4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly int4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly int4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public int4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public int4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly int4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly int4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public int4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public int4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly int4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly int4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public int4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public int4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly int4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly int4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public int4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public int4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly int4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly int4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // int4_mt8

#region int4_mt16

public partial struct int4_mt16 
{
    public readonly int4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public int4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly int4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public int4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public int4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly int4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public int4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public int4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly int4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly int4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public int4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public int4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly int4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly int4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public int4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public int4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly int4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly int4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public int4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public int4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly int4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public int4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public int4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly int4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly int4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public int4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public int4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly int4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public int4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public int4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly int4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly int4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public int4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public int4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly int4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly int4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public int4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public int4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly int4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly int4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public int4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public int4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly int4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public int4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public int4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly int4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly int4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public int4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public int4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly int4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public int4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public int4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly int4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly int4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public int4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public int4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly int4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly int4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public int4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public int4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly int4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly int4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public int4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public int4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly int4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly int4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public int4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public int4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly int4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly int4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public int4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public int4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly int4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly int4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public int4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public int4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly int4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly int4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public int4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public int4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly int4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly int4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public int4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public int4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly int4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly int4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public int4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public int4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly int4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly int4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // int4_mt16

#region int4_mt32

public partial struct int4_mt32 
{
    public readonly int4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly int4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly int4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly int4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly int4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly int4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly int4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly int4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly int4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly int4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly int4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly int4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly int4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly int4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly int4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly int4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly int4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly int4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly int4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly int4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly int4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly int4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly int4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly int4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly int4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly int4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly int4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly int4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public int4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public int4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly int4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly int4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly int4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public int4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public int4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly int4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly int4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly int4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly int4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly int4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly int4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly int4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly int4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly int4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public int4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public int4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly int4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly int4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly int4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly int4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly int4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly int4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public int4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public int4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly int4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly int4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly int4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly int4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly int4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly int4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly int4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly int4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly int4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public int4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public int4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly int4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly int4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly int4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public int4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public int4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly int4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly int4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly int4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly int4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly int4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly int4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly int4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly int4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly int4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly int4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly int4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly int4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly int4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly int4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly int4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly int4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly int4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly int4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public int4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public int4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly int4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly int4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly int4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public int4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public int4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly int4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly int4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly int4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly int4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly int4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly int4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly int4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly int4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly int4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly int4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly int4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly int4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly int4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly int4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly int4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly int4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly int4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly int4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly int4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly int4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly int4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public int4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public int4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly int4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly int4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly int4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly int4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly int4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly int4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly int4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly int4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly int4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public int4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public int4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly int4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly int4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly int4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly int4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly int4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly int4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public int4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public int4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly int4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly int4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly int4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly int4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly int4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly int4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public int4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public int4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly int4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly int4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly int4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly int4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly int4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly int4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly int4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly int4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly int4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly int4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly int4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly int4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly int4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly int4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly int4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public int4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public int4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly int4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly int4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly int4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly int4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly int4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly int4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public int4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public int4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly int4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly int4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly int4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly int4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly int4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly int4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public int4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public int4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly int4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly int4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly int4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly int4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly int4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly int4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly int4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly int4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly int4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public int4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public int4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly int4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly int4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly int4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly int4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly int4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly int4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly int4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly int4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly int4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly int4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly int4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly int4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly int4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly int4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly int4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly int4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly int4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly int4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly int4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly int4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly int4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public int4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public int4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly int4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly int4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly int4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public int4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public int4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly int4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly int4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly int4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly int4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly int4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly int4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly int4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly int4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly int4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly int4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly int4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly int4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly int4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly int4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly int4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly int4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly int4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly int4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public int4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public int4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly int4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly int4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly int4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public int4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public int4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly int4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly int4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly int4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly int4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly int4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly int4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly int4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly int4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly int4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public int4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public int4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly int4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly int4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly int4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly int4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly int4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly int4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public int4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public int4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly int4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly int4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly int4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly int4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly int4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly int4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly int4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly int4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly int4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public int4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public int4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly int4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly int4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly int4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public int4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public int4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly int4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly int4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly int4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly int4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly int4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly int4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly int4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly int4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly int4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly int4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly int4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly int4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly int4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly int4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly int4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly int4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly int4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly int4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly int4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly int4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly int4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly int4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly int4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly int4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly int4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly int4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly int4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly int4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // int4_mt32

#region uint4_mt4

public partial struct uint4_mt4 
{
    public readonly uint4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public uint4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly uint4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public uint4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public uint4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly uint4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public uint4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public uint4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly uint4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly uint4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public uint4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public uint4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly uint4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly uint4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public uint4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public uint4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly uint4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly uint4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public uint4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public uint4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly uint4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public uint4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public uint4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly uint4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly uint4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public uint4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public uint4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly uint4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public uint4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public uint4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly uint4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly uint4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public uint4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public uint4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly uint4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly uint4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public uint4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public uint4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly uint4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly uint4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public uint4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public uint4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly uint4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public uint4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public uint4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly uint4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly uint4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public uint4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public uint4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly uint4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public uint4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public uint4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly uint4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly uint4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public uint4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public uint4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly uint4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly uint4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public uint4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public uint4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly uint4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly uint4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public uint4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public uint4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly uint4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly uint4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public uint4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public uint4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly uint4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly uint4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public uint4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public uint4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly uint4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly uint4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public uint4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public uint4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly uint4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly uint4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public uint4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public uint4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly uint4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly uint4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public uint4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public uint4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly uint4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly uint4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public uint4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public uint4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly uint4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly uint4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // uint4_mt4

#region uint4_mt8

public partial struct uint4_mt8 
{
    public readonly uint4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public uint4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly uint4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public uint4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public uint4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly uint4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public uint4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public uint4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly uint4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly uint4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public uint4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public uint4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly uint4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly uint4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public uint4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public uint4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly uint4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly uint4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public uint4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public uint4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly uint4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public uint4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public uint4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly uint4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly uint4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public uint4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public uint4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly uint4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public uint4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public uint4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly uint4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly uint4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public uint4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public uint4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly uint4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly uint4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public uint4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public uint4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly uint4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly uint4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public uint4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public uint4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly uint4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public uint4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public uint4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly uint4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly uint4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public uint4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public uint4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly uint4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public uint4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public uint4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly uint4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly uint4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public uint4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public uint4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly uint4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly uint4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public uint4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public uint4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly uint4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly uint4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public uint4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public uint4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly uint4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly uint4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public uint4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public uint4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly uint4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly uint4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public uint4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public uint4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly uint4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly uint4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public uint4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public uint4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly uint4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly uint4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public uint4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public uint4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly uint4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly uint4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public uint4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public uint4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly uint4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly uint4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public uint4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public uint4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly uint4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly uint4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // uint4_mt8

#region uint4_mt16

public partial struct uint4_mt16 
{
    public readonly uint4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public uint4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly uint4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public uint4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public uint4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly uint4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public uint4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public uint4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly uint4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly uint4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public uint4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public uint4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly uint4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly uint4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public uint4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public uint4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly uint4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly uint4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public uint4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public uint4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly uint4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public uint4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public uint4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly uint4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly uint4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public uint4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public uint4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly uint4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public uint4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public uint4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly uint4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly uint4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public uint4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public uint4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly uint4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly uint4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public uint4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public uint4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly uint4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly uint4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public uint4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public uint4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly uint4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public uint4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public uint4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly uint4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly uint4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public uint4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public uint4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly uint4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public uint4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public uint4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly uint4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly uint4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public uint4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public uint4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly uint4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly uint4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public uint4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public uint4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly uint4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly uint4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public uint4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public uint4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly uint4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly uint4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public uint4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public uint4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly uint4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly uint4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public uint4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public uint4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly uint4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly uint4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public uint4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public uint4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly uint4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly uint4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public uint4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public uint4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly uint4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly uint4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public uint4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public uint4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly uint4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly uint4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public uint4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public uint4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly uint4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly uint4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // uint4_mt16

#region uint4_mt32

public partial struct uint4_mt32 
{
    public readonly uint4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly uint4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly uint4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly uint4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly uint4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly uint4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly uint4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly uint4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly uint4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly uint4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly uint4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly uint4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly uint4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly uint4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly uint4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly uint4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly uint4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly uint4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly uint4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly uint4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly uint4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly uint4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly uint4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly uint4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly uint4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly uint4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly uint4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly uint4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public uint4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public uint4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly uint4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly uint4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly uint4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public uint4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public uint4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly uint4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly uint4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly uint4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly uint4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly uint4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly uint4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly uint4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly uint4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly uint4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public uint4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public uint4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly uint4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly uint4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly uint4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly uint4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly uint4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly uint4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public uint4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public uint4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly uint4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly uint4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly uint4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly uint4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly uint4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly uint4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly uint4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly uint4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly uint4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public uint4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public uint4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly uint4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly uint4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly uint4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public uint4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public uint4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly uint4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly uint4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly uint4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly uint4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly uint4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly uint4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly uint4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly uint4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly uint4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly uint4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly uint4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly uint4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly uint4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly uint4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly uint4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly uint4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly uint4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly uint4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public uint4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public uint4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly uint4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly uint4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly uint4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public uint4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public uint4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly uint4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly uint4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly uint4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly uint4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly uint4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly uint4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly uint4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly uint4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly uint4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly uint4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly uint4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly uint4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly uint4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly uint4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly uint4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly uint4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly uint4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly uint4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly uint4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly uint4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly uint4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public uint4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public uint4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly uint4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly uint4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly uint4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly uint4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly uint4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly uint4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly uint4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly uint4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly uint4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public uint4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public uint4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly uint4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly uint4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly uint4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly uint4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly uint4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly uint4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public uint4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public uint4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly uint4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly uint4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly uint4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly uint4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly uint4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly uint4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public uint4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public uint4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly uint4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly uint4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly uint4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly uint4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly uint4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly uint4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly uint4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly uint4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly uint4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly uint4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly uint4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly uint4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly uint4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly uint4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly uint4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public uint4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public uint4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly uint4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly uint4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly uint4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly uint4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly uint4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly uint4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public uint4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public uint4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly uint4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly uint4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly uint4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly uint4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly uint4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly uint4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public uint4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public uint4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly uint4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly uint4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly uint4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly uint4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly uint4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly uint4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly uint4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly uint4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly uint4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public uint4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public uint4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly uint4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly uint4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly uint4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly uint4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly uint4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly uint4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly uint4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly uint4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly uint4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly uint4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly uint4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly uint4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly uint4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly uint4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly uint4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly uint4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly uint4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly uint4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly uint4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly uint4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly uint4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public uint4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public uint4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly uint4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly uint4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly uint4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public uint4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public uint4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly uint4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly uint4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly uint4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly uint4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly uint4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly uint4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly uint4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly uint4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly uint4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly uint4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly uint4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly uint4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly uint4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly uint4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly uint4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly uint4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly uint4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly uint4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public uint4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public uint4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly uint4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly uint4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly uint4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public uint4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public uint4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly uint4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly uint4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly uint4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly uint4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly uint4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly uint4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly uint4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly uint4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly uint4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public uint4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public uint4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly uint4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly uint4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly uint4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly uint4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly uint4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly uint4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public uint4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public uint4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly uint4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly uint4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly uint4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly uint4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly uint4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly uint4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly uint4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly uint4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly uint4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public uint4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public uint4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly uint4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly uint4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly uint4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public uint4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public uint4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly uint4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly uint4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly uint4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly uint4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly uint4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly uint4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly uint4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly uint4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly uint4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly uint4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly uint4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly uint4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly uint4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly uint4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly uint4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly uint4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly uint4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly uint4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly uint4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly uint4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly uint4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly uint4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly uint4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly uint4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly uint4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly uint4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly uint4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly uint4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // uint4_mt32

#region long4_mt4

public partial struct long4_mt4 
{
    public readonly long4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public long4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly long4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public long4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public long4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly long4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public long4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public long4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly long4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly long4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public long4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public long4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly long4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly long4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public long4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public long4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly long4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly long4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public long4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public long4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly long4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public long4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public long4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly long4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly long4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public long4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public long4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly long4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public long4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public long4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly long4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly long4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public long4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public long4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly long4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly long4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public long4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public long4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly long4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly long4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public long4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public long4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly long4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public long4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public long4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly long4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly long4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public long4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public long4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly long4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public long4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public long4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly long4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly long4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public long4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public long4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly long4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly long4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public long4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public long4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly long4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly long4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public long4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public long4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly long4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly long4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public long4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public long4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly long4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly long4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public long4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public long4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly long4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly long4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public long4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public long4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly long4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly long4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public long4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public long4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly long4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly long4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public long4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public long4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly long4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly long4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public long4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public long4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly long4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly long4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // long4_mt4

#region long4_mt8

public partial struct long4_mt8 
{
    public readonly long4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public long4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly long4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public long4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public long4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly long4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public long4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public long4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly long4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly long4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public long4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public long4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly long4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly long4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public long4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public long4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly long4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly long4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public long4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public long4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly long4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public long4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public long4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly long4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly long4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public long4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public long4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly long4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public long4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public long4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly long4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly long4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public long4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public long4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly long4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly long4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public long4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public long4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly long4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly long4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public long4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public long4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly long4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public long4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public long4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly long4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly long4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public long4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public long4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly long4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public long4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public long4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly long4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly long4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public long4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public long4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly long4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly long4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public long4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public long4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly long4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly long4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public long4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public long4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly long4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly long4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public long4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public long4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly long4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly long4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public long4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public long4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly long4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly long4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public long4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public long4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly long4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly long4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public long4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public long4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly long4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly long4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public long4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public long4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly long4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly long4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public long4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public long4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly long4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly long4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // long4_mt8

#region long4_mt16

public partial struct long4_mt16 
{
    public readonly long4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public long4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly long4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public long4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public long4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly long4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public long4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public long4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly long4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly long4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public long4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public long4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly long4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly long4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public long4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public long4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly long4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly long4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public long4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public long4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly long4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public long4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public long4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly long4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly long4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public long4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public long4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly long4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public long4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public long4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly long4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly long4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public long4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public long4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly long4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly long4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public long4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public long4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly long4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly long4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public long4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public long4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly long4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public long4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public long4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly long4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly long4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public long4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public long4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly long4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public long4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public long4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly long4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly long4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public long4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public long4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly long4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly long4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public long4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public long4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly long4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly long4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public long4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public long4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly long4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly long4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public long4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public long4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly long4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly long4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public long4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public long4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly long4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly long4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public long4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public long4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly long4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly long4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public long4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public long4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly long4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly long4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public long4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public long4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly long4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly long4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public long4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public long4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly long4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly long4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // long4_mt16

#region long4_mt32

public partial struct long4_mt32 
{
    public readonly long4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly long4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly long4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly long4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly long4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly long4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly long4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly long4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly long4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly long4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly long4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly long4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly long4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly long4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly long4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly long4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly long4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly long4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly long4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly long4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly long4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly long4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly long4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly long4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly long4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly long4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly long4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly long4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public long4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public long4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly long4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly long4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly long4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public long4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public long4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly long4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly long4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly long4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly long4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly long4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly long4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly long4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly long4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly long4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public long4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public long4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly long4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly long4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly long4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly long4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly long4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly long4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public long4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public long4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly long4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly long4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly long4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly long4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly long4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly long4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly long4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly long4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly long4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public long4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public long4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly long4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly long4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly long4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public long4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public long4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly long4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly long4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly long4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly long4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly long4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly long4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly long4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly long4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly long4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly long4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly long4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly long4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly long4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly long4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly long4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly long4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly long4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly long4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public long4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public long4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly long4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly long4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly long4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public long4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public long4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly long4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly long4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly long4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly long4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly long4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly long4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly long4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly long4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly long4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly long4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly long4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly long4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly long4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly long4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly long4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly long4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly long4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly long4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly long4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly long4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly long4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public long4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public long4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly long4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly long4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly long4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly long4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly long4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly long4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly long4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly long4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly long4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public long4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public long4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly long4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly long4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly long4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly long4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly long4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly long4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public long4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public long4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly long4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly long4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly long4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly long4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly long4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly long4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public long4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public long4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly long4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly long4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly long4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly long4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly long4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly long4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly long4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly long4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly long4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly long4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly long4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly long4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly long4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly long4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly long4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public long4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public long4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly long4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly long4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly long4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly long4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly long4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly long4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public long4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public long4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly long4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly long4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly long4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly long4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly long4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly long4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public long4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public long4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly long4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly long4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly long4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly long4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly long4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly long4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly long4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly long4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly long4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public long4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public long4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly long4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly long4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly long4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly long4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly long4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly long4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly long4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly long4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly long4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly long4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly long4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly long4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly long4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly long4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly long4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly long4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly long4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly long4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly long4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly long4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly long4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public long4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public long4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly long4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly long4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly long4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public long4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public long4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly long4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly long4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly long4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly long4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly long4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly long4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly long4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly long4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly long4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly long4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly long4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly long4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly long4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly long4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly long4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly long4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly long4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly long4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public long4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public long4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly long4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly long4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly long4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public long4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public long4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly long4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly long4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly long4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly long4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly long4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly long4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly long4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly long4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly long4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public long4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public long4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly long4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly long4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly long4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly long4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly long4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly long4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public long4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public long4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly long4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly long4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly long4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly long4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly long4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly long4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly long4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly long4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly long4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public long4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public long4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly long4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly long4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly long4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public long4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public long4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly long4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly long4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly long4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly long4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly long4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly long4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly long4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly long4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly long4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly long4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly long4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly long4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly long4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly long4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly long4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly long4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly long4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly long4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly long4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly long4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly long4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly long4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly long4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly long4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly long4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly long4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly long4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly long4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // long4_mt32

#region ulong4_mt4

public partial struct ulong4_mt4 
{
    public readonly ulong4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public ulong4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly ulong4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public ulong4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public ulong4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly ulong4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public ulong4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public ulong4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly ulong4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly ulong4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public ulong4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public ulong4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly ulong4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly ulong4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public ulong4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public ulong4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly ulong4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly ulong4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public ulong4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public ulong4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly ulong4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public ulong4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public ulong4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly ulong4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly ulong4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public ulong4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public ulong4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly ulong4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public ulong4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public ulong4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly ulong4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly ulong4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public ulong4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public ulong4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly ulong4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly ulong4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public ulong4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public ulong4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly ulong4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly ulong4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public ulong4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public ulong4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly ulong4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public ulong4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public ulong4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly ulong4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly ulong4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public ulong4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public ulong4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly ulong4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public ulong4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public ulong4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly ulong4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly ulong4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public ulong4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public ulong4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly ulong4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly ulong4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public ulong4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public ulong4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly ulong4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly ulong4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public ulong4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public ulong4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly ulong4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly ulong4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public ulong4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public ulong4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly ulong4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly ulong4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public ulong4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public ulong4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly ulong4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly ulong4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public ulong4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public ulong4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly ulong4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly ulong4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public ulong4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public ulong4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly ulong4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly ulong4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public ulong4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public ulong4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly ulong4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly ulong4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public ulong4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public ulong4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly ulong4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly ulong4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // ulong4_mt4

#region ulong4_mt8

public partial struct ulong4_mt8 
{
    public readonly ulong4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public ulong4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly ulong4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public ulong4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public ulong4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly ulong4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public ulong4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public ulong4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly ulong4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly ulong4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public ulong4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public ulong4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly ulong4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly ulong4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public ulong4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public ulong4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly ulong4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly ulong4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public ulong4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public ulong4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly ulong4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public ulong4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public ulong4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly ulong4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly ulong4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public ulong4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public ulong4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly ulong4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public ulong4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public ulong4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly ulong4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly ulong4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public ulong4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public ulong4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly ulong4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly ulong4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public ulong4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public ulong4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly ulong4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly ulong4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public ulong4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public ulong4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly ulong4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public ulong4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public ulong4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly ulong4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly ulong4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public ulong4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public ulong4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly ulong4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public ulong4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public ulong4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly ulong4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly ulong4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public ulong4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public ulong4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly ulong4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly ulong4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public ulong4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public ulong4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly ulong4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly ulong4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public ulong4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public ulong4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly ulong4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly ulong4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public ulong4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public ulong4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly ulong4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly ulong4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public ulong4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public ulong4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly ulong4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly ulong4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public ulong4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public ulong4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly ulong4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly ulong4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public ulong4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public ulong4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly ulong4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly ulong4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public ulong4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public ulong4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly ulong4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly ulong4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public ulong4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public ulong4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly ulong4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly ulong4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // ulong4_mt8

#region ulong4_mt16

public partial struct ulong4_mt16 
{
    public readonly ulong4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public ulong4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly ulong4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public ulong4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public ulong4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly ulong4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public ulong4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public ulong4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly ulong4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly ulong4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public ulong4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public ulong4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly ulong4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly ulong4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public ulong4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public ulong4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly ulong4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly ulong4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public ulong4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public ulong4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly ulong4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public ulong4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public ulong4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly ulong4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly ulong4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public ulong4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public ulong4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly ulong4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public ulong4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public ulong4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly ulong4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly ulong4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public ulong4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public ulong4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly ulong4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly ulong4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public ulong4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public ulong4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly ulong4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly ulong4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public ulong4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public ulong4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly ulong4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public ulong4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public ulong4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly ulong4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly ulong4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public ulong4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public ulong4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly ulong4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public ulong4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public ulong4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly ulong4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly ulong4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public ulong4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public ulong4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly ulong4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly ulong4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public ulong4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public ulong4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly ulong4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly ulong4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public ulong4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public ulong4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly ulong4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly ulong4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public ulong4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public ulong4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly ulong4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly ulong4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public ulong4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public ulong4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly ulong4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly ulong4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public ulong4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public ulong4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly ulong4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly ulong4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public ulong4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public ulong4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly ulong4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly ulong4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public ulong4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public ulong4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly ulong4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly ulong4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public ulong4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public ulong4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly ulong4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly ulong4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // ulong4_mt16

#region ulong4_mt32

public partial struct ulong4_mt32 
{
    public readonly ulong4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly ulong4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly ulong4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly ulong4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly ulong4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly ulong4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly ulong4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly ulong4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly ulong4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly ulong4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly ulong4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly ulong4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly ulong4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly ulong4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly ulong4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly ulong4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly ulong4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly ulong4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly ulong4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly ulong4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly ulong4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly ulong4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly ulong4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly ulong4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly ulong4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly ulong4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly ulong4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly ulong4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public ulong4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public ulong4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly ulong4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly ulong4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly ulong4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public ulong4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public ulong4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly ulong4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly ulong4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly ulong4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly ulong4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly ulong4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly ulong4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly ulong4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly ulong4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly ulong4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public ulong4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public ulong4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly ulong4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly ulong4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly ulong4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly ulong4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly ulong4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly ulong4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public ulong4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public ulong4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly ulong4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly ulong4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly ulong4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly ulong4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly ulong4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly ulong4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly ulong4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly ulong4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly ulong4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public ulong4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public ulong4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly ulong4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly ulong4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly ulong4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public ulong4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public ulong4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly ulong4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly ulong4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly ulong4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly ulong4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly ulong4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly ulong4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly ulong4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly ulong4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly ulong4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly ulong4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly ulong4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly ulong4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly ulong4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly ulong4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly ulong4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly ulong4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly ulong4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly ulong4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public ulong4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public ulong4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly ulong4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly ulong4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly ulong4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public ulong4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public ulong4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly ulong4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly ulong4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly ulong4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly ulong4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly ulong4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly ulong4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly ulong4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly ulong4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly ulong4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly ulong4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly ulong4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly ulong4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly ulong4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly ulong4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly ulong4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly ulong4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly ulong4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly ulong4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly ulong4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly ulong4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly ulong4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public ulong4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public ulong4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly ulong4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly ulong4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly ulong4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly ulong4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly ulong4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly ulong4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly ulong4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly ulong4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly ulong4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public ulong4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public ulong4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly ulong4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly ulong4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly ulong4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly ulong4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly ulong4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly ulong4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public ulong4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public ulong4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly ulong4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly ulong4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly ulong4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly ulong4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly ulong4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly ulong4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public ulong4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public ulong4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly ulong4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly ulong4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly ulong4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly ulong4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly ulong4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly ulong4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly ulong4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly ulong4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly ulong4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly ulong4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly ulong4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly ulong4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly ulong4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly ulong4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly ulong4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public ulong4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public ulong4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly ulong4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly ulong4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly ulong4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly ulong4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly ulong4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly ulong4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public ulong4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public ulong4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly ulong4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly ulong4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly ulong4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly ulong4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly ulong4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly ulong4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public ulong4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public ulong4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly ulong4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly ulong4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly ulong4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly ulong4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly ulong4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly ulong4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly ulong4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly ulong4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly ulong4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public ulong4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public ulong4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly ulong4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly ulong4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly ulong4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly ulong4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly ulong4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly ulong4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly ulong4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly ulong4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly ulong4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly ulong4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly ulong4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly ulong4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly ulong4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly ulong4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly ulong4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly ulong4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly ulong4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly ulong4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly ulong4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly ulong4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly ulong4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public ulong4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public ulong4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly ulong4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly ulong4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly ulong4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public ulong4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public ulong4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly ulong4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly ulong4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly ulong4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly ulong4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly ulong4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly ulong4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly ulong4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly ulong4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly ulong4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly ulong4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly ulong4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly ulong4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly ulong4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly ulong4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly ulong4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly ulong4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly ulong4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly ulong4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public ulong4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public ulong4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly ulong4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly ulong4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly ulong4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public ulong4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public ulong4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly ulong4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly ulong4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly ulong4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly ulong4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly ulong4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly ulong4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly ulong4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly ulong4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly ulong4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public ulong4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public ulong4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly ulong4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly ulong4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly ulong4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly ulong4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly ulong4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly ulong4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public ulong4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public ulong4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly ulong4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly ulong4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly ulong4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly ulong4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly ulong4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly ulong4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly ulong4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly ulong4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly ulong4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public ulong4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public ulong4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly ulong4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly ulong4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly ulong4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public ulong4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public ulong4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly ulong4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly ulong4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly ulong4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly ulong4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly ulong4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly ulong4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly ulong4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly ulong4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly ulong4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly ulong4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly ulong4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly ulong4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly ulong4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly ulong4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly ulong4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly ulong4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly ulong4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly ulong4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly ulong4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly ulong4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly ulong4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly ulong4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly ulong4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly ulong4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly ulong4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly ulong4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly ulong4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly ulong4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // ulong4_mt32

#region b32v4_mt4

public partial struct b32v4_mt4 
{
    public readonly b32v4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b32v4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b32v4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b32v4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b32v4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b32v4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b32v4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b32v4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b32v4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b32v4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b32v4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b32v4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b32v4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b32v4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b32v4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b32v4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b32v4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b32v4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b32v4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b32v4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b32v4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b32v4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b32v4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b32v4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b32v4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b32v4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b32v4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b32v4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b32v4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b32v4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b32v4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b32v4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b32v4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b32v4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b32v4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b32v4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b32v4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b32v4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b32v4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b32v4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b32v4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b32v4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b32v4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b32v4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b32v4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b32v4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b32v4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b32v4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b32v4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b32v4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b32v4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b32v4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b32v4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b32v4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b32v4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b32v4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b32v4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b32v4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b32v4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b32v4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b32v4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b32v4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b32v4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b32v4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b32v4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b32v4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b32v4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b32v4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b32v4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b32v4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b32v4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b32v4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b32v4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b32v4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b32v4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b32v4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b32v4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b32v4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b32v4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b32v4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b32v4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b32v4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b32v4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b32v4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b32v4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b32v4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b32v4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b32v4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b32v4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b32v4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b32v4_mt4

#region b32v4_mt8

public partial struct b32v4_mt8 
{
    public readonly b32v4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b32v4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b32v4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b32v4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b32v4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b32v4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b32v4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b32v4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b32v4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b32v4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b32v4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b32v4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b32v4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b32v4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b32v4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b32v4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b32v4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b32v4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b32v4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b32v4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b32v4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b32v4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b32v4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b32v4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b32v4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b32v4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b32v4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b32v4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b32v4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b32v4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b32v4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b32v4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b32v4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b32v4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b32v4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b32v4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b32v4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b32v4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b32v4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b32v4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b32v4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b32v4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b32v4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b32v4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b32v4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b32v4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b32v4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b32v4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b32v4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b32v4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b32v4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b32v4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b32v4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b32v4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b32v4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b32v4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b32v4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b32v4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b32v4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b32v4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b32v4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b32v4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b32v4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b32v4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b32v4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b32v4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b32v4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b32v4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b32v4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b32v4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b32v4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b32v4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b32v4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b32v4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b32v4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b32v4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b32v4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b32v4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b32v4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b32v4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b32v4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b32v4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b32v4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b32v4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b32v4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b32v4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b32v4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b32v4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b32v4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b32v4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b32v4_mt8

#region b32v4_mt16

public partial struct b32v4_mt16 
{
    public readonly b32v4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b32v4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b32v4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b32v4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b32v4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b32v4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b32v4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b32v4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b32v4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b32v4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b32v4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b32v4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b32v4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b32v4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b32v4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b32v4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b32v4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b32v4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b32v4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b32v4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b32v4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b32v4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b32v4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b32v4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b32v4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b32v4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b32v4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b32v4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b32v4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b32v4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b32v4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b32v4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b32v4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b32v4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b32v4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b32v4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b32v4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b32v4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b32v4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b32v4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b32v4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b32v4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b32v4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b32v4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b32v4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b32v4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b32v4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b32v4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b32v4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b32v4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b32v4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b32v4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b32v4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b32v4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b32v4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b32v4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b32v4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b32v4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b32v4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b32v4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b32v4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b32v4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b32v4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b32v4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b32v4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b32v4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b32v4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b32v4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b32v4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b32v4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b32v4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b32v4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b32v4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b32v4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b32v4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b32v4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b32v4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b32v4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b32v4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b32v4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b32v4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b32v4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b32v4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b32v4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b32v4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b32v4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b32v4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b32v4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b32v4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b32v4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b32v4_mt16

#region b32v4_mt32

public partial struct b32v4_mt32 
{
    public readonly b32v4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b32v4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b32v4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b32v4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b32v4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b32v4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b32v4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b32v4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b32v4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b32v4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b32v4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b32v4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b32v4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b32v4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b32v4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b32v4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b32v4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b32v4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b32v4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b32v4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b32v4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b32v4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b32v4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b32v4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b32v4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b32v4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b32v4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b32v4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b32v4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b32v4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b32v4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b32v4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b32v4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b32v4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b32v4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b32v4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b32v4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b32v4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b32v4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b32v4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b32v4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b32v4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b32v4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b32v4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b32v4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b32v4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b32v4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b32v4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b32v4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b32v4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b32v4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b32v4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b32v4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b32v4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b32v4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b32v4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b32v4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b32v4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b32v4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b32v4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b32v4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b32v4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b32v4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b32v4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b32v4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b32v4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b32v4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b32v4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b32v4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b32v4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b32v4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b32v4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b32v4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b32v4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b32v4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b32v4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b32v4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b32v4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b32v4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b32v4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b32v4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b32v4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b32v4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b32v4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b32v4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b32v4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b32v4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b32v4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b32v4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b32v4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b32v4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b32v4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b32v4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b32v4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b32v4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b32v4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b32v4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b32v4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b32v4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b32v4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b32v4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b32v4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b32v4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b32v4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b32v4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b32v4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b32v4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b32v4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b32v4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b32v4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b32v4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b32v4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b32v4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b32v4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b32v4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b32v4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b32v4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b32v4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b32v4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b32v4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b32v4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b32v4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b32v4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b32v4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b32v4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b32v4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b32v4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b32v4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b32v4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b32v4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b32v4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b32v4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b32v4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b32v4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b32v4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b32v4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b32v4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b32v4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b32v4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b32v4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b32v4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b32v4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b32v4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b32v4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b32v4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b32v4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b32v4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b32v4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b32v4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b32v4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b32v4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b32v4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b32v4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b32v4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b32v4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b32v4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b32v4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b32v4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b32v4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b32v4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b32v4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b32v4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b32v4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b32v4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b32v4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b32v4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b32v4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b32v4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b32v4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b32v4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b32v4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b32v4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b32v4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b32v4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b32v4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b32v4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b32v4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b32v4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b32v4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b32v4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b32v4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b32v4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b32v4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b32v4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b32v4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b32v4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b32v4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b32v4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b32v4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b32v4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b32v4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b32v4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b32v4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b32v4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b32v4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b32v4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b32v4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b32v4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b32v4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b32v4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b32v4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b32v4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b32v4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b32v4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b32v4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b32v4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b32v4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b32v4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b32v4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b32v4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b32v4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b32v4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b32v4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b32v4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b32v4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b32v4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b32v4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b32v4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b32v4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b32v4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b32v4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b32v4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b32v4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b32v4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b32v4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b32v4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b32v4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b32v4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b32v4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b32v4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b32v4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b32v4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b32v4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b32v4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b32v4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b32v4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b32v4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b32v4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b32v4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b32v4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b32v4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b32v4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b32v4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b32v4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b32v4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b32v4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b32v4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b32v4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b32v4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b32v4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b32v4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b32v4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b32v4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b32v4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b32v4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b32v4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b32v4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b32v4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b32v4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b32v4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b32v4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b32v4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b32v4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b32v4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b32v4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b32v4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b32v4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b32v4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b32v4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b32v4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b32v4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b32v4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b32v4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b32v4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b32v4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b32v4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b32v4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b32v4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b32v4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b32v4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b32v4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b32v4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b32v4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b32v4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b32v4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b32v4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b32v4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b32v4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b32v4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b32v4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b32v4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b32v4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b32v4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b32v4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b32v4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b32v4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b32v4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b32v4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b32v4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b32v4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b32v4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b32v4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b32v4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b32v4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b32v4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b32v4_mt32

#region b64v4_mt4

public partial struct b64v4_mt4 
{
    public readonly b64v4_mt4 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt4 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt4 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt4 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt4 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt4 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt4 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt4 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt4 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt4 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt4 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt4 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt4 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt4 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt4 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt4 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt4 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt4 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt4 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt4 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt4 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt4 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt4 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt4 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt4 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt4 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt4 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt4 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt4 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt4 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt4 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt4 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt4 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt4 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt4 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt4 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt4 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt4 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt4 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt4 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt4 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt4 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt4 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt4 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt4 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt4 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt4 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt4 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt4 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt4 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt4 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt4 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt4 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt4 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b64v4_mt4 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v4_mt4 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v4_mt4 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt4 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt4 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b64v4_mt4 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b64v4_mt4 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b64v4_mt4 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b64v4_mt4 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt4 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt4 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt4 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt4 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt4 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt4 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt4 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt4 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt4 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt4 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt4 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt4 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt4 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt4 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt4 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b64v4_mt4 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b64v4_mt4 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b64v4_mt4 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt4 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt4 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt4 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt4 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt4 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt4 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt4 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt4 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b64v4_mt4 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b64v4_mt4 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b64v4_mt4 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b64v4_mt4 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt4 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt4 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt4 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt4 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt4 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt4 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt4 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt4 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt4 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt4 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt4 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt4 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt4 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt4 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b64v4_mt4 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b64v4_mt4 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b64v4_mt4 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b64v4_mt4 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt4 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt4 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b64v4_mt4 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b64v4_mt4 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b64v4_mt4 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b64v4_mt4 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt4 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt4 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt4 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt4 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt4 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt4 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt4 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt4 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt4 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt4 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt4 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt4 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt4 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt4 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt4 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt4 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt4 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt4 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt4 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt4 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt4 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt4 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt4 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt4 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt4 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt4 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt4 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt4 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt4 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt4 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt4 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt4 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt4 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b64v4_mt4 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b64v4_mt4 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b64v4_mt4 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt4 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt4 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b64v4_mt4 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b64v4_mt4 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b64v4_mt4 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b64v4_mt4 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt4 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt4 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt4 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt4 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt4 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt4 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt4 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt4 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt4 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt4 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt4 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt4 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt4 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt4 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt4 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt4 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt4 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt4 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt4 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt4 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt4 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt4 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt4 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt4 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt4 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt4 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt4 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt4 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt4 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt4 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt4 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt4 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt4 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt4 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt4 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt4 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt4 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt4 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt4 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b64v4_mt4 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b64v4_mt4 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b64v4_mt4 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt4 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt4 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt4 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt4 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt4 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt4 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt4 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt4 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt4 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt4 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt4 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt4 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt4 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt4 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b64v4_mt4 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b64v4_mt4 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b64v4_mt4 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b64v4_mt4 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt4 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt4 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt4 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt4 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt4 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt4 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt4 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt4 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b64v4_mt4 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b64v4_mt4 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b64v4_mt4 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b64v4_mt4 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt4 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt4 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt4 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt4 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt4 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt4 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt4 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt4 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b64v4_mt4 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b64v4_mt4 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b64v4_mt4 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b64v4_mt4 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt4 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt4 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt4 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt4 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt4 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt4 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt4 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt4 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt4 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt4 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt4 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt4 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt4 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt4 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt4 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt4 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt4 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt4 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt4 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt4 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt4 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt4 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt4 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt4 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt4 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt4 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt4 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b64v4_mt4 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b64v4_mt4 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b64v4_mt4 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt4 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt4 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt4 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt4 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt4 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt4 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt4 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt4 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b64v4_mt4 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b64v4_mt4 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b64v4_mt4 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b64v4_mt4 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt4 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt4 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt4 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt4 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt4 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt4 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt4 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt4 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt4 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b64v4_mt4 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b64v4_mt4 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b64v4_mt4 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt4 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt4 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt4 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt4 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt4 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt4 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt4 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt4 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt4 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt4 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt4 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt4 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt4 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt4 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b64v4_mt4 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b64v4_mt4 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b64v4_mt4 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b64v4_mt4 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt4 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt4 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt4 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt4 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt4 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt4 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt4 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt4 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt4 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt4 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt4 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt4 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt4 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt4 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt4 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt4 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt4 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt4 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt4 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt4 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt4 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt4 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt4 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt4 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt4 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt4 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt4 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt4 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt4 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt4 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt4 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt4 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt4 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt4 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt4 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt4 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt4 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt4 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b64v4_mt4 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b64v4_mt4 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b64v4_mt4 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b64v4_mt4 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt4 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt4 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b64v4_mt4 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b64v4_mt4 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b64v4_mt4 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b64v4_mt4 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt4 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt4 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt4 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt4 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt4 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt4 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt4 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt4 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt4 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt4 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt4 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt4 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt4 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt4 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt4 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt4 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt4 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt4 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt4 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt4 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt4 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt4 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt4 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt4 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt4 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt4 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt4 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt4 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt4 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt4 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt4 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt4 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b64v4_mt4 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b64v4_mt4 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b64v4_mt4 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b64v4_mt4 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt4 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt4 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b64v4_mt4 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b64v4_mt4 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b64v4_mt4 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b64v4_mt4 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt4 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt4 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt4 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt4 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt4 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt4 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt4 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt4 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt4 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt4 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt4 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt4 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt4 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt4 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b64v4_mt4 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b64v4_mt4 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b64v4_mt4 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b64v4_mt4 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt4 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt4 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt4 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt4 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt4 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt4 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt4 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt4 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b64v4_mt4 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b64v4_mt4 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b64v4_mt4 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b64v4_mt4 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt4 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt4 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt4 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt4 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt4 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt4 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt4 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt4 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt4 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt4 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt4 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt4 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt4 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt4 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b64v4_mt4 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b64v4_mt4 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b64v4_mt4 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b64v4_mt4 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt4 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt4 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b64v4_mt4 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b64v4_mt4 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b64v4_mt4 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b64v4_mt4 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt4 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt4 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt4 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt4 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt4 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt4 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt4 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt4 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt4 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt4 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt4 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt4 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt4 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt4 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt4 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt4 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt4 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt4 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt4 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt4 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt4 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt4 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt4 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt4 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt4 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt4 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt4 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt4 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt4 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt4 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt4 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt4 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt4 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt4 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt4 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt4 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt4 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt4 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt4 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt4 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt4 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt4 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt4 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt4 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt4 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt4 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt4 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt4 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt4 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt4 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt4 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt4 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b64v4_mt4 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b64v4_mt4

#region b64v4_mt8

public partial struct b64v4_mt8 
{
    public readonly b64v4_mt8 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt8 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt8 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt8 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt8 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt8 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt8 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt8 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt8 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt8 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt8 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt8 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt8 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt8 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt8 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt8 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt8 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt8 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt8 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt8 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt8 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt8 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt8 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt8 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt8 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt8 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt8 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt8 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt8 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt8 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt8 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt8 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt8 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt8 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt8 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt8 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt8 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt8 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt8 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt8 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt8 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt8 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt8 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt8 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt8 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt8 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt8 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt8 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt8 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt8 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt8 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt8 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt8 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt8 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b64v4_mt8 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v4_mt8 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v4_mt8 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt8 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt8 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b64v4_mt8 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b64v4_mt8 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b64v4_mt8 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b64v4_mt8 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt8 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt8 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt8 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt8 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt8 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt8 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt8 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt8 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt8 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt8 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt8 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt8 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt8 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt8 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt8 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b64v4_mt8 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b64v4_mt8 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b64v4_mt8 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt8 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt8 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt8 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt8 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt8 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt8 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt8 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt8 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b64v4_mt8 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b64v4_mt8 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b64v4_mt8 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b64v4_mt8 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt8 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt8 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt8 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt8 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt8 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt8 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt8 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt8 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt8 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt8 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt8 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt8 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt8 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt8 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b64v4_mt8 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b64v4_mt8 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b64v4_mt8 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b64v4_mt8 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt8 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt8 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b64v4_mt8 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b64v4_mt8 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b64v4_mt8 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b64v4_mt8 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt8 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt8 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt8 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt8 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt8 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt8 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt8 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt8 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt8 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt8 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt8 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt8 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt8 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt8 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt8 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt8 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt8 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt8 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt8 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt8 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt8 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt8 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt8 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt8 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt8 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt8 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt8 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt8 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt8 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt8 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt8 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt8 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt8 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b64v4_mt8 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b64v4_mt8 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b64v4_mt8 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt8 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt8 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b64v4_mt8 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b64v4_mt8 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b64v4_mt8 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b64v4_mt8 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt8 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt8 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt8 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt8 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt8 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt8 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt8 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt8 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt8 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt8 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt8 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt8 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt8 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt8 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt8 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt8 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt8 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt8 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt8 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt8 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt8 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt8 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt8 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt8 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt8 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt8 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt8 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt8 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt8 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt8 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt8 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt8 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt8 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt8 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt8 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt8 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt8 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt8 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt8 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b64v4_mt8 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b64v4_mt8 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b64v4_mt8 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt8 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt8 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt8 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt8 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt8 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt8 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt8 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt8 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt8 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt8 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt8 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt8 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt8 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt8 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b64v4_mt8 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b64v4_mt8 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b64v4_mt8 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b64v4_mt8 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt8 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt8 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt8 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt8 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt8 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt8 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt8 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt8 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b64v4_mt8 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b64v4_mt8 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b64v4_mt8 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b64v4_mt8 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt8 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt8 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt8 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt8 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt8 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt8 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt8 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt8 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b64v4_mt8 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b64v4_mt8 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b64v4_mt8 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b64v4_mt8 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt8 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt8 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt8 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt8 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt8 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt8 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt8 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt8 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt8 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt8 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt8 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt8 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt8 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt8 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt8 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt8 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt8 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt8 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt8 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt8 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt8 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt8 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt8 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt8 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt8 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt8 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt8 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b64v4_mt8 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b64v4_mt8 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b64v4_mt8 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt8 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt8 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt8 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt8 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt8 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt8 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt8 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt8 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b64v4_mt8 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b64v4_mt8 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b64v4_mt8 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b64v4_mt8 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt8 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt8 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt8 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt8 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt8 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt8 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt8 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt8 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt8 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b64v4_mt8 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b64v4_mt8 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b64v4_mt8 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt8 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt8 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt8 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt8 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt8 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt8 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt8 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt8 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt8 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt8 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt8 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt8 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt8 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt8 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b64v4_mt8 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b64v4_mt8 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b64v4_mt8 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b64v4_mt8 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt8 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt8 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt8 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt8 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt8 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt8 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt8 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt8 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt8 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt8 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt8 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt8 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt8 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt8 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt8 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt8 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt8 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt8 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt8 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt8 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt8 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt8 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt8 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt8 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt8 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt8 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt8 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt8 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt8 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt8 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt8 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt8 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt8 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt8 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt8 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt8 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt8 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt8 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b64v4_mt8 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b64v4_mt8 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b64v4_mt8 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b64v4_mt8 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt8 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt8 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b64v4_mt8 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b64v4_mt8 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b64v4_mt8 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b64v4_mt8 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt8 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt8 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt8 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt8 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt8 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt8 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt8 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt8 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt8 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt8 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt8 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt8 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt8 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt8 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt8 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt8 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt8 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt8 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt8 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt8 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt8 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt8 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt8 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt8 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt8 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt8 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt8 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt8 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt8 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt8 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt8 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt8 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b64v4_mt8 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b64v4_mt8 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b64v4_mt8 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b64v4_mt8 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt8 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt8 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b64v4_mt8 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b64v4_mt8 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b64v4_mt8 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b64v4_mt8 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt8 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt8 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt8 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt8 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt8 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt8 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt8 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt8 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt8 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt8 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt8 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt8 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt8 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt8 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b64v4_mt8 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b64v4_mt8 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b64v4_mt8 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b64v4_mt8 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt8 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt8 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt8 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt8 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt8 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt8 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt8 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt8 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b64v4_mt8 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b64v4_mt8 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b64v4_mt8 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b64v4_mt8 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt8 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt8 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt8 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt8 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt8 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt8 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt8 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt8 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt8 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt8 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt8 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt8 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt8 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt8 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b64v4_mt8 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b64v4_mt8 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b64v4_mt8 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b64v4_mt8 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt8 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt8 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b64v4_mt8 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b64v4_mt8 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b64v4_mt8 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b64v4_mt8 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt8 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt8 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt8 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt8 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt8 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt8 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt8 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt8 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt8 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt8 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt8 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt8 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt8 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt8 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt8 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt8 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt8 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt8 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt8 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt8 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt8 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt8 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt8 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt8 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt8 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt8 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt8 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt8 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt8 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt8 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt8 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt8 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt8 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt8 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt8 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt8 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt8 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt8 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt8 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt8 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt8 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt8 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt8 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt8 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt8 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt8 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt8 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt8 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt8 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt8 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt8 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt8 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b64v4_mt8 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b64v4_mt8

#region b64v4_mt16

public partial struct b64v4_mt16 
{
    public readonly b64v4_mt16 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt16 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt16 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt16 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt16 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt16 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt16 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt16 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt16 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt16 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt16 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt16 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt16 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt16 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt16 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt16 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt16 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt16 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt16 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt16 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt16 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt16 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt16 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt16 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt16 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt16 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt16 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt16 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt16 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt16 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt16 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt16 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt16 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt16 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt16 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt16 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt16 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt16 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt16 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt16 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt16 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt16 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt16 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt16 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt16 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt16 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt16 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt16 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt16 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt16 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt16 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt16 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt16 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt16 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b64v4_mt16 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v4_mt16 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v4_mt16 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt16 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt16 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b64v4_mt16 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b64v4_mt16 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b64v4_mt16 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b64v4_mt16 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt16 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt16 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt16 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt16 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt16 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt16 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt16 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt16 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt16 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt16 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt16 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt16 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt16 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt16 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt16 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b64v4_mt16 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b64v4_mt16 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b64v4_mt16 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt16 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt16 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt16 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt16 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt16 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt16 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt16 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt16 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b64v4_mt16 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b64v4_mt16 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b64v4_mt16 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b64v4_mt16 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt16 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt16 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt16 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt16 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt16 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt16 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt16 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt16 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt16 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt16 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt16 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt16 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt16 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt16 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b64v4_mt16 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b64v4_mt16 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b64v4_mt16 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b64v4_mt16 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt16 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt16 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b64v4_mt16 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b64v4_mt16 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b64v4_mt16 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b64v4_mt16 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt16 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt16 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt16 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt16 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt16 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt16 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt16 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt16 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt16 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt16 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt16 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt16 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt16 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt16 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt16 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt16 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt16 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt16 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt16 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt16 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt16 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt16 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt16 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt16 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt16 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt16 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt16 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt16 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt16 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt16 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt16 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt16 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt16 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b64v4_mt16 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b64v4_mt16 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b64v4_mt16 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt16 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt16 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b64v4_mt16 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b64v4_mt16 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b64v4_mt16 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b64v4_mt16 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt16 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt16 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt16 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt16 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt16 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt16 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt16 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt16 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt16 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt16 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt16 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt16 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt16 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt16 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt16 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt16 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt16 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt16 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt16 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt16 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt16 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt16 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt16 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt16 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt16 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt16 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt16 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt16 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt16 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt16 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt16 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt16 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt16 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt16 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt16 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt16 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt16 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt16 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt16 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b64v4_mt16 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b64v4_mt16 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b64v4_mt16 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt16 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt16 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt16 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt16 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt16 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt16 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt16 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt16 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt16 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt16 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt16 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt16 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt16 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt16 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b64v4_mt16 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b64v4_mt16 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b64v4_mt16 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b64v4_mt16 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt16 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt16 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt16 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt16 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt16 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt16 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt16 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt16 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b64v4_mt16 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b64v4_mt16 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b64v4_mt16 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b64v4_mt16 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt16 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt16 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt16 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt16 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt16 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt16 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt16 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt16 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b64v4_mt16 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b64v4_mt16 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b64v4_mt16 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b64v4_mt16 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt16 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt16 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt16 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt16 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt16 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt16 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt16 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt16 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt16 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt16 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt16 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt16 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt16 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt16 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt16 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt16 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt16 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt16 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt16 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt16 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt16 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt16 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt16 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt16 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt16 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt16 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt16 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b64v4_mt16 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b64v4_mt16 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b64v4_mt16 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt16 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt16 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt16 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt16 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt16 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt16 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt16 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt16 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b64v4_mt16 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b64v4_mt16 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b64v4_mt16 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b64v4_mt16 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt16 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt16 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt16 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt16 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt16 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt16 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt16 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt16 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt16 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b64v4_mt16 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b64v4_mt16 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b64v4_mt16 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt16 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt16 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt16 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt16 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt16 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt16 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt16 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt16 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt16 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt16 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt16 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt16 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt16 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt16 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b64v4_mt16 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b64v4_mt16 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b64v4_mt16 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b64v4_mt16 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt16 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt16 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt16 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt16 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt16 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt16 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt16 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt16 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt16 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt16 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt16 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt16 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt16 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt16 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt16 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt16 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt16 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt16 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt16 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt16 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt16 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt16 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt16 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt16 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt16 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt16 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt16 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt16 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt16 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt16 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt16 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt16 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt16 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt16 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt16 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt16 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt16 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt16 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b64v4_mt16 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b64v4_mt16 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b64v4_mt16 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b64v4_mt16 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt16 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt16 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b64v4_mt16 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b64v4_mt16 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b64v4_mt16 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b64v4_mt16 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt16 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt16 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt16 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt16 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt16 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt16 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt16 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt16 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt16 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt16 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt16 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt16 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt16 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt16 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt16 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt16 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt16 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt16 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt16 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt16 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt16 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt16 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt16 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt16 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt16 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt16 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt16 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt16 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt16 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt16 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt16 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt16 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b64v4_mt16 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b64v4_mt16 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b64v4_mt16 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b64v4_mt16 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt16 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt16 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b64v4_mt16 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b64v4_mt16 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b64v4_mt16 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b64v4_mt16 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt16 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt16 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt16 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt16 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt16 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt16 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt16 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt16 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt16 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt16 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt16 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt16 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt16 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt16 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b64v4_mt16 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b64v4_mt16 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b64v4_mt16 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b64v4_mt16 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt16 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt16 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt16 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt16 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt16 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt16 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt16 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt16 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b64v4_mt16 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b64v4_mt16 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b64v4_mt16 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b64v4_mt16 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt16 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt16 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt16 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt16 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt16 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt16 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt16 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt16 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt16 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt16 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt16 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt16 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt16 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt16 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b64v4_mt16 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b64v4_mt16 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b64v4_mt16 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b64v4_mt16 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt16 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt16 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b64v4_mt16 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b64v4_mt16 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b64v4_mt16 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b64v4_mt16 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt16 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt16 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt16 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt16 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt16 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt16 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt16 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt16 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt16 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt16 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt16 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt16 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt16 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt16 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt16 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt16 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt16 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt16 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt16 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt16 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt16 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt16 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt16 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt16 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt16 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt16 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt16 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt16 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt16 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt16 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt16 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt16 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt16 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt16 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt16 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt16 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt16 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt16 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt16 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt16 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt16 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt16 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt16 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt16 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt16 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt16 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt16 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt16 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt16 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt16 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt16 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt16 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b64v4_mt16 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b64v4_mt16

#region b64v4_mt32

public partial struct b64v4_mt32 
{
    public readonly b64v4_mt32 xxxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt32 rrrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, x);
    }
    public readonly b64v4_mt32 xxxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt32 rrrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, y);
    }
    public readonly b64v4_mt32 xxxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt32 rrrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, z);
    }
    public readonly b64v4_mt32 xxxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt32 rrra
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, x, w);
    }
    public readonly b64v4_mt32 xxyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt32 rrgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, x);
    }
    public readonly b64v4_mt32 xxyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt32 rrgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, y);
    }
    public readonly b64v4_mt32 xxyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt32 rrgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, z);
    }
    public readonly b64v4_mt32 xxyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt32 rrga
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, y, w);
    }
    public readonly b64v4_mt32 xxzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt32 rrbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, x);
    }
    public readonly b64v4_mt32 xxzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt32 rrbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, y);
    }
    public readonly b64v4_mt32 xxzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt32 rrbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, z);
    }
    public readonly b64v4_mt32 xxzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt32 rrba
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, z, w);
    }
    public readonly b64v4_mt32 xxwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt32 rrar
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, x);
    }
    public readonly b64v4_mt32 xxwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt32 rrag
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, y);
    }
    public readonly b64v4_mt32 xxwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt32 rrab
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, z);
    }
    public readonly b64v4_mt32 xxww
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt32 rraa
    {
        [MethodImpl(256 | 512)]
        get => new(x, x, w, w);
    }
    public readonly b64v4_mt32 xyxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt32 rgrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, x);
    }
    public readonly b64v4_mt32 xyxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt32 rgrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, y);
    }
    public readonly b64v4_mt32 xyxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt32 rgrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, z);
    }
    public readonly b64v4_mt32 xyxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt32 rgra
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, x, w);
    }
    public readonly b64v4_mt32 xyyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt32 rggr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, x);
    }
    public readonly b64v4_mt32 xyyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt32 rggg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, y);
    }
    public readonly b64v4_mt32 xyyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt32 rggb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, z);
    }
    public readonly b64v4_mt32 xyyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt32 rgga
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, y, w);
    }
    public readonly b64v4_mt32 xyzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt32 rgbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, x);
    }
    public readonly b64v4_mt32 xyzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt32 rgbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, y);
    }
    public readonly b64v4_mt32 xyzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public readonly b64v4_mt32 rgbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, z, z);
    }
    public b64v4_mt32 xyzw
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public b64v4_mt32 rgba
    {
        [MethodImpl(256 | 512)]
        readonly get => this;
        [MethodImpl(256 | 512)]
        set => this = value;
    }
    public readonly b64v4_mt32 xywx
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt32 rgar
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, x);
    }
    public readonly b64v4_mt32 xywy
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public readonly b64v4_mt32 rgag
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, y);
    }
    public b64v4_mt32 xywz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public b64v4_mt32 rgab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, y, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.xywz;
    }
    public readonly b64v4_mt32 xyww
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt32 rgaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, y, w, w);
    }
    public readonly b64v4_mt32 xzxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt32 rbrr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, x);
    }
    public readonly b64v4_mt32 xzxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt32 rbrg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, y);
    }
    public readonly b64v4_mt32 xzxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt32 rbrb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, z);
    }
    public readonly b64v4_mt32 xzxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt32 rbra
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, x, w);
    }
    public readonly b64v4_mt32 xzyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt32 rbgr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, x);
    }
    public readonly b64v4_mt32 xzyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt32 rbgg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, y);
    }
    public readonly b64v4_mt32 xzyz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public readonly b64v4_mt32 rbgb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, y, z);
    }
    public b64v4_mt32 xzyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public b64v4_mt32 rbga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.xzyw;
    }
    public readonly b64v4_mt32 xzzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt32 rbbr
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, x);
    }
    public readonly b64v4_mt32 xzzy
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt32 rbbg
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, y);
    }
    public readonly b64v4_mt32 xzzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt32 rbbb
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, z);
    }
    public readonly b64v4_mt32 xzzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt32 rbba
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, z, w);
    }
    public readonly b64v4_mt32 xzwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public readonly b64v4_mt32 rbar
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, x);
    }
    public b64v4_mt32 xzwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public b64v4_mt32 rbag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, z, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwyz;
    }
    public readonly b64v4_mt32 xzwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt32 rbab
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, z);
    }
    public readonly b64v4_mt32 xzww
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt32 rbaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, z, w, w);
    }
    public readonly b64v4_mt32 xwxx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt32 rarr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, x);
    }
    public readonly b64v4_mt32 xwxy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt32 rarg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, y);
    }
    public readonly b64v4_mt32 xwxz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt32 rarb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, z);
    }
    public readonly b64v4_mt32 xwxw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt32 rara
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, x, w);
    }
    public readonly b64v4_mt32 xwyx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt32 ragr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, x);
    }
    public readonly b64v4_mt32 xwyy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public readonly b64v4_mt32 ragg
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, y);
    }
    public b64v4_mt32 xwyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public b64v4_mt32 ragb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.xzwy;
    }
    public readonly b64v4_mt32 xwyw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt32 raga
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, y, w);
    }
    public readonly b64v4_mt32 xwzx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public readonly b64v4_mt32 rabr
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, x);
    }
    public b64v4_mt32 xwzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public b64v4_mt32 rabg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(x, w, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.xwzy;
    }
    public readonly b64v4_mt32 xwzz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt32 rabb
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, z);
    }
    public readonly b64v4_mt32 xwzw
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt32 raba
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, z, w);
    }
    public readonly b64v4_mt32 xwwx
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt32 raar
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, x);
    }
    public readonly b64v4_mt32 xwwy
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt32 raag
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, y);
    }
    public readonly b64v4_mt32 xwwz
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt32 raab
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, z);
    }
    public readonly b64v4_mt32 xwww
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt32 raaa
    {
        [MethodImpl(256 | 512)]
        get => new(x, w, w, w);
    }
    public readonly b64v4_mt32 yxxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt32 grrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, x);
    }
    public readonly b64v4_mt32 yxxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt32 grrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, y);
    }
    public readonly b64v4_mt32 yxxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt32 grrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, z);
    }
    public readonly b64v4_mt32 yxxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt32 grra
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, x, w);
    }
    public readonly b64v4_mt32 yxyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt32 grgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, x);
    }
    public readonly b64v4_mt32 yxyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt32 grgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, y);
    }
    public readonly b64v4_mt32 yxyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt32 grgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, z);
    }
    public readonly b64v4_mt32 yxyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt32 grga
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, y, w);
    }
    public readonly b64v4_mt32 yxzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt32 grbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, x);
    }
    public readonly b64v4_mt32 yxzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt32 grbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, y);
    }
    public readonly b64v4_mt32 yxzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public readonly b64v4_mt32 grbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, z, z);
    }
    public b64v4_mt32 yxzw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public b64v4_mt32 grba
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, z, w);
        [MethodImpl(256 | 512)]
        set => this = value.yxzw;
    }
    public readonly b64v4_mt32 yxwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt32 grar
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, x);
    }
    public readonly b64v4_mt32 yxwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public readonly b64v4_mt32 grag
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, y);
    }
    public b64v4_mt32 yxwz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public b64v4_mt32 grab
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, x, w, z);
        [MethodImpl(256 | 512)]
        set => this = value.yxwz;
    }
    public readonly b64v4_mt32 yxww
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt32 graa
    {
        [MethodImpl(256 | 512)]
        get => new(y, x, w, w);
    }
    public readonly b64v4_mt32 yyxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt32 ggrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, x);
    }
    public readonly b64v4_mt32 yyxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt32 ggrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, y);
    }
    public readonly b64v4_mt32 yyxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt32 ggrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, z);
    }
    public readonly b64v4_mt32 yyxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt32 ggra
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, x, w);
    }
    public readonly b64v4_mt32 yyyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt32 gggr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, x);
    }
    public readonly b64v4_mt32 yyyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt32 gggg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, y);
    }
    public readonly b64v4_mt32 yyyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt32 gggb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, z);
    }
    public readonly b64v4_mt32 yyyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt32 ggga
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, y, w);
    }
    public readonly b64v4_mt32 yyzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt32 ggbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, x);
    }
    public readonly b64v4_mt32 yyzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt32 ggbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, y);
    }
    public readonly b64v4_mt32 yyzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt32 ggbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, z);
    }
    public readonly b64v4_mt32 yyzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt32 ggba
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, z, w);
    }
    public readonly b64v4_mt32 yywx
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt32 ggar
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, x);
    }
    public readonly b64v4_mt32 yywy
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt32 ggag
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, y);
    }
    public readonly b64v4_mt32 yywz
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt32 ggab
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, z);
    }
    public readonly b64v4_mt32 yyww
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt32 ggaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, y, w, w);
    }
    public readonly b64v4_mt32 yzxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt32 gbrr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, x);
    }
    public readonly b64v4_mt32 yzxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt32 gbrg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, y);
    }
    public readonly b64v4_mt32 yzxz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public readonly b64v4_mt32 gbrb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, x, z);
    }
    public b64v4_mt32 yzxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public b64v4_mt32 gbra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zxyw;
    }
    public readonly b64v4_mt32 yzyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt32 gbgr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, x);
    }
    public readonly b64v4_mt32 yzyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt32 gbgg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, y);
    }
    public readonly b64v4_mt32 yzyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt32 gbgb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, z);
    }
    public readonly b64v4_mt32 yzyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt32 gbga
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, y, w);
    }
    public readonly b64v4_mt32 yzzx
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt32 gbbr
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, x);
    }
    public readonly b64v4_mt32 yzzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt32 gbbg
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, y);
    }
    public readonly b64v4_mt32 yzzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt32 gbbb
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, z);
    }
    public readonly b64v4_mt32 yzzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public readonly b64v4_mt32 gbba
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, z, w);
    }
    public b64v4_mt32 yzwx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public b64v4_mt32 gbar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, z, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxyz;
    }
    public readonly b64v4_mt32 yzwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt32 gbag
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, y);
    }
    public readonly b64v4_mt32 yzwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt32 gbab
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, z);
    }
    public readonly b64v4_mt32 yzww
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt32 gbaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, z, w, w);
    }
    public readonly b64v4_mt32 ywxx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt32 garr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, x);
    }
    public readonly b64v4_mt32 ywxy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public readonly b64v4_mt32 garg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, y);
    }
    public b64v4_mt32 ywxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public b64v4_mt32 garb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zxwy;
    }
    public readonly b64v4_mt32 ywxw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt32 gara
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, x, w);
    }
    public readonly b64v4_mt32 ywyx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt32 gagr
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, x);
    }
    public readonly b64v4_mt32 ywyy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt32 gagg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, y);
    }
    public readonly b64v4_mt32 ywyz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt32 gagb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, z);
    }
    public readonly b64v4_mt32 ywyw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public readonly b64v4_mt32 gaga
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, y, w);
    }
    public b64v4_mt32 ywzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public b64v4_mt32 gabr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(y, w, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wxzy;
    }
    public readonly b64v4_mt32 ywzy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt32 gabg
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, y);
    }
    public readonly b64v4_mt32 ywzz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt32 gabb
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, z);
    }
    public readonly b64v4_mt32 ywzw
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt32 gaba
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, z, w);
    }
    public readonly b64v4_mt32 ywwx
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt32 gaar
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, x);
    }
    public readonly b64v4_mt32 ywwy
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt32 gaag
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, y);
    }
    public readonly b64v4_mt32 ywwz
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt32 gaab
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, z);
    }
    public readonly b64v4_mt32 ywww
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt32 gaaa
    {
        [MethodImpl(256 | 512)]
        get => new(y, w, w, w);
    }
    public readonly b64v4_mt32 zxxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt32 brrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, x);
    }
    public readonly b64v4_mt32 zxxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt32 brrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, y);
    }
    public readonly b64v4_mt32 zxxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt32 brrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, z);
    }
    public readonly b64v4_mt32 zxxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt32 brra
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, x, w);
    }
    public readonly b64v4_mt32 zxyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt32 brgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, x);
    }
    public readonly b64v4_mt32 zxyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt32 brgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, y);
    }
    public readonly b64v4_mt32 zxyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public readonly b64v4_mt32 brgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, y, z);
    }
    public b64v4_mt32 zxyw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public b64v4_mt32 brga
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, y, w);
        [MethodImpl(256 | 512)]
        set => this = value.yzxw;
    }
    public readonly b64v4_mt32 zxzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt32 brbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, x);
    }
    public readonly b64v4_mt32 zxzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt32 brbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, y);
    }
    public readonly b64v4_mt32 zxzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt32 brbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, z);
    }
    public readonly b64v4_mt32 zxzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt32 brba
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, z, w);
    }
    public readonly b64v4_mt32 zxwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public readonly b64v4_mt32 brar
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, x);
    }
    public b64v4_mt32 zxwy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public b64v4_mt32 brag
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, x, w, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywxz;
    }
    public readonly b64v4_mt32 zxwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt32 brab
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, z);
    }
    public readonly b64v4_mt32 zxww
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt32 braa
    {
        [MethodImpl(256 | 512)]
        get => new(z, x, w, w);
    }
    public readonly b64v4_mt32 zyxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt32 bgrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, x);
    }
    public readonly b64v4_mt32 zyxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt32 bgrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, y);
    }
    public readonly b64v4_mt32 zyxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public readonly b64v4_mt32 bgrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, x, z);
    }
    public b64v4_mt32 zyxw
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public b64v4_mt32 bgra
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, x, w);
        [MethodImpl(256 | 512)]
        set => this = value.zyxw;
    }
    public readonly b64v4_mt32 zyyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt32 bggr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, x);
    }
    public readonly b64v4_mt32 zyyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt32 bggg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, y);
    }
    public readonly b64v4_mt32 zyyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt32 bggb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, z);
    }
    public readonly b64v4_mt32 zyyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt32 bgga
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, y, w);
    }
    public readonly b64v4_mt32 zyzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt32 bgbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, x);
    }
    public readonly b64v4_mt32 zyzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt32 bgbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, y);
    }
    public readonly b64v4_mt32 zyzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt32 bgbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, z);
    }
    public readonly b64v4_mt32 zyzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public readonly b64v4_mt32 bgba
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, z, w);
    }
    public b64v4_mt32 zywx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public b64v4_mt32 bgar
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, y, w, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyxz;
    }
    public readonly b64v4_mt32 zywy
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt32 bgag
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, y);
    }
    public readonly b64v4_mt32 zywz
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt32 bgab
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, z);
    }
    public readonly b64v4_mt32 zyww
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt32 bgaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, y, w, w);
    }
    public readonly b64v4_mt32 zzxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt32 bbrr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, x);
    }
    public readonly b64v4_mt32 zzxy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt32 bbrg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, y);
    }
    public readonly b64v4_mt32 zzxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt32 bbrb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, z);
    }
    public readonly b64v4_mt32 zzxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt32 bbra
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, x, w);
    }
    public readonly b64v4_mt32 zzyx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt32 bbgr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, x);
    }
    public readonly b64v4_mt32 zzyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt32 bbgg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, y);
    }
    public readonly b64v4_mt32 zzyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt32 bbgb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, z);
    }
    public readonly b64v4_mt32 zzyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt32 bbga
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, y, w);
    }
    public readonly b64v4_mt32 zzzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt32 bbbr
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, x);
    }
    public readonly b64v4_mt32 zzzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt32 bbbg
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, y);
    }
    public readonly b64v4_mt32 zzzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt32 bbbb
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, z);
    }
    public readonly b64v4_mt32 zzzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt32 bbba
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, z, w);
    }
    public readonly b64v4_mt32 zzwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt32 bbar
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, x);
    }
    public readonly b64v4_mt32 zzwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt32 bbag
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, y);
    }
    public readonly b64v4_mt32 zzwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt32 bbab
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, z);
    }
    public readonly b64v4_mt32 zzww
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt32 bbaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, z, w, w);
    }
    public readonly b64v4_mt32 zwxx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public readonly b64v4_mt32 barr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, x);
    }
    public b64v4_mt32 zwxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public b64v4_mt32 barg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwxy;
    }
    public readonly b64v4_mt32 zwxz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt32 barb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, z);
    }
    public readonly b64v4_mt32 zwxw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public readonly b64v4_mt32 bara
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, x, w);
    }
    public b64v4_mt32 zwyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public b64v4_mt32 bagr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(z, w, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzxy;
    }
    public readonly b64v4_mt32 zwyy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt32 bagg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, y);
    }
    public readonly b64v4_mt32 zwyz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt32 bagb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, z);
    }
    public readonly b64v4_mt32 zwyw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt32 baga
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, y, w);
    }
    public readonly b64v4_mt32 zwzx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt32 babr
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, x);
    }
    public readonly b64v4_mt32 zwzy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt32 babg
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, y);
    }
    public readonly b64v4_mt32 zwzz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt32 babb
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, z);
    }
    public readonly b64v4_mt32 zwzw
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt32 baba
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, z, w);
    }
    public readonly b64v4_mt32 zwwx
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt32 baar
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, x);
    }
    public readonly b64v4_mt32 zwwy
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt32 baag
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, y);
    }
    public readonly b64v4_mt32 zwwz
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt32 baab
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, z);
    }
    public readonly b64v4_mt32 zwww
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt32 baaa
    {
        [MethodImpl(256 | 512)]
        get => new(z, w, w, w);
    }
    public readonly b64v4_mt32 wxxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt32 arrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, x);
    }
    public readonly b64v4_mt32 wxxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt32 arrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, y);
    }
    public readonly b64v4_mt32 wxxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt32 arrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, z);
    }
    public readonly b64v4_mt32 wxxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt32 arra
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, x, w);
    }
    public readonly b64v4_mt32 wxyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt32 argr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, x);
    }
    public readonly b64v4_mt32 wxyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public readonly b64v4_mt32 argg
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, y);
    }
    public b64v4_mt32 wxyz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public b64v4_mt32 argb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, y, z);
        [MethodImpl(256 | 512)]
        set => this = value.yzwx;
    }
    public readonly b64v4_mt32 wxyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt32 arga
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, y, w);
    }
    public readonly b64v4_mt32 wxzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public readonly b64v4_mt32 arbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, x);
    }
    public b64v4_mt32 wxzy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public b64v4_mt32 arbg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, x, z, y);
        [MethodImpl(256 | 512)]
        set => this = value.ywzx;
    }
    public readonly b64v4_mt32 wxzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt32 arbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, z);
    }
    public readonly b64v4_mt32 wxzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt32 arba
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, z, w);
    }
    public readonly b64v4_mt32 wxwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt32 arar
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, x);
    }
    public readonly b64v4_mt32 wxwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt32 arag
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, y);
    }
    public readonly b64v4_mt32 wxwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt32 arab
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, z);
    }
    public readonly b64v4_mt32 wxww
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt32 araa
    {
        [MethodImpl(256 | 512)]
        get => new(w, x, w, w);
    }
    public readonly b64v4_mt32 wyxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt32 agrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, x);
    }
    public readonly b64v4_mt32 wyxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public readonly b64v4_mt32 agrg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, y);
    }
    public b64v4_mt32 wyxz
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public b64v4_mt32 agrb
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, x, z);
        [MethodImpl(256 | 512)]
        set => this = value.zywx;
    }
    public readonly b64v4_mt32 wyxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt32 agra
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, x, w);
    }
    public readonly b64v4_mt32 wyyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt32 aggr
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, x);
    }
    public readonly b64v4_mt32 wyyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt32 aggg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, y);
    }
    public readonly b64v4_mt32 wyyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt32 aggb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, z);
    }
    public readonly b64v4_mt32 wyyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public readonly b64v4_mt32 agga
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, y, w);
    }
    public b64v4_mt32 wyzx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public b64v4_mt32 agbr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, y, z, x);
        [MethodImpl(256 | 512)]
        set => this = value.wyzx;
    }
    public readonly b64v4_mt32 wyzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt32 agbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, y);
    }
    public readonly b64v4_mt32 wyzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt32 agbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, z);
    }
    public readonly b64v4_mt32 wyzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt32 agba
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, z, w);
    }
    public readonly b64v4_mt32 wywx
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt32 agar
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, x);
    }
    public readonly b64v4_mt32 wywy
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt32 agag
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, y);
    }
    public readonly b64v4_mt32 wywz
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt32 agab
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, z);
    }
    public readonly b64v4_mt32 wyww
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt32 agaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, y, w, w);
    }
    public readonly b64v4_mt32 wzxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public readonly b64v4_mt32 abrr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, x);
    }
    public b64v4_mt32 wzxy
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public b64v4_mt32 abrg
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, x, y);
        [MethodImpl(256 | 512)]
        set => this = value.zwyx;
    }
    public readonly b64v4_mt32 wzxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt32 abrb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, z);
    }
    public readonly b64v4_mt32 wzxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public readonly b64v4_mt32 abra
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, x, w);
    }
    public b64v4_mt32 wzyx
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public b64v4_mt32 abgr
    {
        [MethodImpl(256 | 512)]
        readonly get => new(w, z, y, x);
        [MethodImpl(256 | 512)]
        set => this = value.wzyx;
    }
    public readonly b64v4_mt32 wzyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt32 abgg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, y);
    }
    public readonly b64v4_mt32 wzyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt32 abgb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, z);
    }
    public readonly b64v4_mt32 wzyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt32 abga
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, y, w);
    }
    public readonly b64v4_mt32 wzzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt32 abbr
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, x);
    }
    public readonly b64v4_mt32 wzzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt32 abbg
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, y);
    }
    public readonly b64v4_mt32 wzzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt32 abbb
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, z);
    }
    public readonly b64v4_mt32 wzzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt32 abba
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, z, w);
    }
    public readonly b64v4_mt32 wzwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt32 abar
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, x);
    }
    public readonly b64v4_mt32 wzwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt32 abag
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, y);
    }
    public readonly b64v4_mt32 wzwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt32 abab
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, z);
    }
    public readonly b64v4_mt32 wzww
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt32 abaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, z, w, w);
    }
    public readonly b64v4_mt32 wwxx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt32 aarr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, x);
    }
    public readonly b64v4_mt32 wwxy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt32 aarg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, y);
    }
    public readonly b64v4_mt32 wwxz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt32 aarb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, z);
    }
    public readonly b64v4_mt32 wwxw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt32 aara
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, x, w);
    }
    public readonly b64v4_mt32 wwyx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt32 aagr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, x);
    }
    public readonly b64v4_mt32 wwyy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt32 aagg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, y);
    }
    public readonly b64v4_mt32 wwyz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt32 aagb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, z);
    }
    public readonly b64v4_mt32 wwyw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt32 aaga
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, y, w);
    }
    public readonly b64v4_mt32 wwzx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt32 aabr
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, x);
    }
    public readonly b64v4_mt32 wwzy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt32 aabg
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, y);
    }
    public readonly b64v4_mt32 wwzz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt32 aabb
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, z);
    }
    public readonly b64v4_mt32 wwzw
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt32 aaba
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, z, w);
    }
    public readonly b64v4_mt32 wwwx
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt32 aaar
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, x);
    }
    public readonly b64v4_mt32 wwwy
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt32 aaag
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, y);
    }
    public readonly b64v4_mt32 wwwz
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt32 aaab
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, z);
    }
    public readonly b64v4_mt32 wwww
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
    public readonly b64v4_mt32 aaaa
    {
        [MethodImpl(256 | 512)]
        get => new(w, w, w, w);
    }
}

#endregion // b64v4_mt32
