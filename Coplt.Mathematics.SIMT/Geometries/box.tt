<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../../Coplt.Mathematics/types.ttinclude" #><#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Mathematics.Simt.Geometries;

<#
    var sizes = new[] { 4, 8, 16, 32 };
    foreach (var size in sizes)
    {
        var byteSize = 4 * size;
        var bitSize = 8 * byteSize;
        var num_vectors = Math.Max(1, bitSize / 512);
        bitSize = Math.Min(512, bitSize);

        var vectorName = $"float3_mt{size}";
        var typeName = $"box_mt{size}";

        IEnumerable<string> ForVectors(string name)
        {
            if (num_vectors == 1) yield return name;
            else
            {
                for (var i = 0; i < num_vectors; i++)
                {
                    yield return $"{name}{i}";
                }
            }
        }

        var vectors = ForVectors("vector").ToList();
#>
#region <#= typeName #>

[CpuOnly]
public partial record struct <#= typeName #>
{
    public <#= vectorName #> min;
    public <#= vectorName #> max;
}

#endregion // <#= typeName #>
<#
    }
#>
